{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\nconst columns = [{\n  title: \"序号\",\n  dataIndex: \"userNumber\",\n  key: \"userNumber\",\n  width: 150\n}, {\n  title: \"用户名称\",\n  dataIndex: \"userName\",\n  key: \"userName\",\n  sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n  sortDirections: [\"descend\", \"ascend\"],\n  width: 150\n}, {\n  title: \"用户id\",\n  dataIndex: \"userId\",\n  key: \"userId\",\n  width: 150\n}, {\n  title: \"公司名称\",\n  dataIndex: \"companyName\",\n  key: \"companyName\",\n  sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n  sortDirections: [\"descend\", \"ascend\"],\n  width: 150\n}, {\n  title: \"部门名称\",\n  dataIndex: \"departmentName\",\n  key: \"departmentName\",\n  sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n  sortDirections: [\"descend\", \"ascend\"],\n  width: 150\n}, {\n  title: \"岗位名称\",\n  dataIndex: \"positionNumber\",\n  key: \"positionNumber\",\n  sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n  sortDirections: [\"descend\", \"ascend\"],\n  width: 150\n}, {\n  title: \"Action\",\n  key: \"operation\",\n  fixed: \"right\",\n  width: 100,\n  scopedSlots: {\n    customRender: \"action\"\n  }\n}];\nconst data = [];\n// const treeNodes = this.convertToTree(this.company, this.department);\n// const treeNodes = [\n//   {\n//     key: \"0-0\",\n//     title: \"parent 1\",\n//     iconType: \"carry-out\",\n//     titleColor: \"#1890ff\",\n//     children: [\n//       {\n//         key: \"0-0-0\",\n//         title: \"parent 1-0\",\n//         iconType: \"carry-out\",\n//         titleColor: \"#1890ff\",\n//         children: [\n//           {\n//             key: \"0-0-0-0\",\n//             title: \"leaf 1-0-0\",\n//             iconType: \"carry-out\",\n//             titleColor: \"#1890ff\",\n//             children: [], // 可以继续添加子节点\n//           },\n//           {\n//             key: \"0-0-0-1\",\n//             title: \"leaf 1-0-1\",\n//             iconType: \"carry-out\",\n//             titleColor: \"#1890ff\",\n//             children: [], // 可以继续添加子节点\n//           },\n//           // 可以继续添加更多的子节点\n//         ],\n//       },\n//       {\n//         key: \"0-0-1\",\n//         title: \"parent 1-1\",\n//         iconType: \"carry-out\",\n//         titleColor: \"#1890ff\",\n//         children: [\n//           // 可以添加更多的子节点和子子节点\n//         ],\n//       },\n//       // 可以继续添加更多的父节点\n//     ],\n//   },\n// ];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`\n  });\n}\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\n// 前后端对接的配置\n// import positionApi from \"@/api/positionManage\";\nimport axios from \"axios\";\n//import userApi from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\resource\\\\vue_01\\\\vue_bili_03\\\\vue_bili\\\\src\\\\api\\\\usersManage.js\";\nexport default {\n  data() {\n    return {\n      showLine: true,\n      showIcon: false,\n      data,\n      columns,\n      positionList: [],\n      plainOptions: [],\n      checkedList: [],\n      company: [],\n      department: [],\n      checkedList_new: [],\n      ModalText: \"Content of the modal\",\n      visible: false,\n      visibleEdit: false,\n      confirmLoading: false,\n      checkNick: false,\n      formItemLayout,\n      formTailLayout,\n      form: {\n        userName: \"\",\n        userId: \"\",\n        companyNumber: null,\n        departmentNumber: null\n      },\n      formEdit: {\n        userName: \"\",\n        userId: \"\",\n        companyNumber: null,\n        departmentNumber: null,\n        userNumber: null\n      },\n      data1: {},\n      defaultExpandedKeys: [\"0-0-0\", \"0-0-1\", \"0-0-2\"],\n      treeNodes: [] // 后端传输的树节点数据\n    };\n  },\n\n  methods: {\n    getAllCompany() {\n      var url = \"http://localhost:8090/sys/company/allCompany\";\n      axios.get(url).then(res => {\n        // 获得查询结果 BaseResult\n        var baseResult = res.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.company = baseResult.data;\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    getAllDepartment() {\n      var url = \"http://localhost:8090/sys/department/allDepartment\";\n      axios.get(url).then(res => {\n        // 获得查询结果 BaseResult\n        var baseResult = res.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.department = baseResult.data;\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    chooseRole(record) {\n      axios.get(\"/sys/belong1/chooseRole\", {\n        params: {\n          userNumber: record.userNumber\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        if (baseResult.code == 20000) {\n          this.checkedList = baseResult.data;\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    showAllRole() {\n      var url = \"http://localhost:8090/sys/role/allRoleName\";\n      axios.get(url).then(res => {\n        // 获得查询结果 BaseResult\n        var baseResult = res.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.plainOptions = baseResult.data;\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    deleteAutho(record) {\n      axios.get(\"/sys/users/userDelete\", {\n        params: {\n          token: localStorage.getItem(\"token\")\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        if (baseResult.code == 20000) {\n          this.deleteRow(record);\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    deleteRow(record) {\n      console.info(\"success delete users\");\n      //提交给后台\n      axios.post(\"/sys/users/deleteUsers\", {\n        userNumber: record.userNumber,\n        userName: record.userName,\n        userId: record.userId,\n        companyNumber: record.companyNumber,\n        departmentNumber: record.departmentNumber\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          if (response.data.code == 20000) {\n            this.$message.success(\"删除成功！\", 5);\n          } else {\n            this.$message.error(\"无法删除\", 5);\n          }\n          this.visible = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    showModal() {\n      this.visible = true;\n    },\n    showModaledit(record) {\n      this.visibleEdit = true;\n      this.formEdit.userId = record.userId;\n      this.formEdit.userName = record.userName;\n      this.formEdit.departmentNumber = record.departmentNumber;\n      this.formEdit.companyNumber = record.companyNumber;\n      this.formEdit.userNumber = record.userNumber;\n      this.showAllRole();\n      this.chooseRole(record);\n    },\n    handleOk(e) {\n      this.visible = false;\n      this.checkAutho();\n    },\n    handleCancel(e) {\n      console.log(\"Clicked cancel button\");\n      this.visible = false;\n    },\n    handleOkEdit(e) {\n      this.visibleEdit = false;\n      this.editAutho();\n      // this.edit();\n    },\n\n    handleCancelEdit(e) {\n      console.log(\"Clicked cancel button\");\n      this.visibleEdit = false;\n    },\n    onSelect(selectedKeys, info) {\n      console.log(\"selected\", selectedKeys, info);\n    },\n    onSearch(value) {\n      this.data = {\n        userName: value\n      };\n      console.info(\"search success\");\n      console.info(value);\n      //提交给后台\n      axios.get(\"/sys/users/allSearch\", {\n        params: {\n          userName: value\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        this.selectsearchClasses(value);\n      });\n    },\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = {\n        ...this.pagination\n      };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    },\n    editAutho() {\n      axios.get(\"/sys/users/userEdit\", {\n        params: {\n          token: localStorage.getItem(\"token\")\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        if (baseResult.code == 20000) {\n          this.edit();\n          this.editRole();\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    edit() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios.post(\"/sys/users/editUsers\", {\n        userNumber: this.formEdit.userNumber,\n        userName: this.formEdit.userName,\n        userId: this.formEdit.userId,\n        companyNumber: this.formEdit.companyNumber,\n        departmentNumber: this.formEdit.departmentNumber\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          this.$message.success(\"成功修改！\", 5);\n          this.visibleEdit = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    editRole() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios.post(\"/sys/role/editRole\", {\n        userNumber: this.formEdit.userNumber,\n        userRole: this.checkedList\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          this.$message.success(\"成功修改！\", 5);\n          this.visibleEdit = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    onAdd() {\n      console.log(\"点击了添加\");\n    },\n    checkAutho() {\n      axios.get(\"/sys/users/userAdd\", {\n        params: {\n          token: localStorage.getItem(\"token\")\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        if (baseResult.code == 20000) {\n          this.check();\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    check() {\n      console.info(\"success\");\n      //提交给后台\n      axios.post(\"/sys/users/addUsers\", {\n        userName: this.form.userName,\n        userId: this.form.userId,\n        companyNumber: this.form.companyNumber,\n        departmentNumber: this.form.departmentNumber,\n        userRole: this.checkedList_new\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          this.$message.success(\"成功添加！\", 10);\n          this.visible = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    // 添加下面这个方法来提交表单数据给后端\n    submitForm() {\n      // 从这里发送 POST 请求，将 this.form 中的数据发送给后端\n      axios.post(\"/addUsers\", this.form).then(response => {\n        // 处理成功响应\n        console.log(\"成功发送表单数据至后端\", response);\n      }).catch(error => {\n        // 处理错误\n        console.error(\"发送表单数据至后端出错\", error);\n      });\n    },\n    onChange,\n    // getPositionList() {\n    //   // userApi.getUserList 开始调用后端，并传递参数searchModel\n    //   // then表示后端查询后返回的数据\n    //   positionApi.getPositionList().then((response) => {\n    //     this.positionList = response.data.rows;\n    //     this.total = response.data.total;\n    //   });\n    // },\n    async fetchData() {\n      try {\n        const response = axios.get(\"http://localhost:8090/sys/users/all\"); // 使用正确的URL来获取后端数据\n        const responseData = response.data; // 从响应中提取数据\n        if (responseData.code === 20000) {\n          this.positionList = responseData.data; // 将后端返回的数据赋值给前端的data变量\n        } else {\n          console.error(responseData.message); // 如果出现错误，输出错误信息\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    selectAllClasses() {\n      // ajax 查询\n      var url = \"http://localhost:8090/sys/users/all\";\n      axios.get(url).then(res => {\n        // 获得查询结果 BaseResult\n        var baseResult = res.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.positionList = baseResult.data;\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    selectsearchClasses(userName) {\n      // ajax 查询\n      console.log(\"search\");\n      var url = \"http://localhost:8090/sys/users/allSearch?userName=\" + userName;\n      axios.get(url).then(response => {\n        // 获得查询结果 BaseResult\n        var baseResult = response.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.positionList = baseResult.data;\n          this.$message.success(\"成功查询！\", 5);\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    convertToTree(companyList, departmentList) {\n      const treeNodes = [];\n      companyList.forEach((company, index) => {\n        const companyNode = {\n          key: `0-${index}`,\n          title: company.companyName,\n          iconType: \"carry-out\",\n          titleColor: \"#1890ff\",\n          children: []\n        };\n        const departments = departmentList.filter(department => department.companyNumber === company.companyNumber);\n        departments.forEach((department, depIndex) => {\n          const departmentNode = {\n            key: `0-${index}-${depIndex}`,\n            title: department.departmentName,\n            iconType: \"carry-out\",\n            titleColor: \"#1890ff\",\n            children: []\n          };\n          companyNode.children.push(departmentNode);\n        });\n        treeNodes.push(companyNode);\n      });\n      this.treeNodes = JSON.stringify(treeNodes, null, 2);\n      return JSON.stringify(treeNodes, null, 2); // Convert to string with indentation\n    }\n  },\n\n  created() {\n    // this.fetchData();\n    this.selectAllClasses();\n    this.showAllRole();\n    this.getAllCompany();\n    this.getAllDepartment();\n    this.convertToTree(this.company, this.department);\n    console.log(this.tree);\n  }\n};","map":{"version":3,"names":["formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","columns","title","dataIndex","key","width","sorter","a","b","positionName","localeCompare","sortDirections","fixed","scopedSlots","customRender","data","i","push","name","age","address","onChange","pagination","filters","console","log","axios","showLine","showIcon","positionList","plainOptions","checkedList","company","department","checkedList_new","ModalText","visible","visibleEdit","confirmLoading","checkNick","form","userName","userId","companyNumber","departmentNumber","formEdit","userNumber","data1","defaultExpandedKeys","treeNodes","methods","getAllCompany","url","get","then","res","baseResult","code","alert","message","catch","err","error","getAllDepartment","chooseRole","record","params","response","$message","showAllRole","deleteAutho","token","localStorage","getItem","deleteRow","info","post","status","success","selectAllClasses","showModal","showModaledit","handleOk","e","checkAutho","handleCancel","handleOkEdit","editAutho","handleCancelEdit","onSelect","selectedKeys","onSearch","value","selectsearchClasses","handleTableChange","pager","current","fetch","results","pageSize","page","sortField","field","sortOrder","order","edit","editRole","userRole","onAdd","check","submitForm","fetchData","responseData","convertToTree","companyList","departmentList","forEach","index","companyNode","companyName","iconType","titleColor","children","departments","filter","depIndex","departmentNode","departmentName","JSON","stringify","created","tree"],"sources":["src/views/home/form/StepFrom.vue"],"sourcesContent":["<template>\n  <div>\n    <a-row>\n      <a-col :span=\"6\">\n        <a-layout-content\n          :style=\"{\n            background: '#fff',\n            padding: '24px',\n            height: '500px',\n            margin: '20px 5px',\n            overflow: 'initial',\n            top: '64px',\n          }\"\n        >\n          <div\n            style=\"\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              text-align: center;\n            \"\n          >\n            <div>\n              <div style=\"margin-bottom: 16px\">\n                showLine: <a-switch v-model=\"showLine\" />\n                <br />\n                <br />\n                showIcon: <a-switch v-model=\"showIcon\" />\n              </div>\n              <a-tree\n                :show-line=\"showLine\"\n                :show-icon=\"showIcon\"\n                :default-expanded-keys=\"defaultExpandedKeys\"\n                @select=\"onSelect\"\n              >\n                <a-icon slot=\"icon\" type=\"carry-out\" />\n                <a-tree-node\n                  :key=\"treeNode.id\"\n                  v-for=\"treeNode in treeNodes\"\n                  :title=\"treeNode.title\"\n                >\n                  <a-icon slot=\"icon\" type=\"carry-out\" />\n                  <span slot=\"title\" style=\"color: #1890ff\">{{\n                    treeNode.title\n                  }}</span>\n                  <a-tree-node\n                    :key=\"child.key\"\n                    v-for=\"child in treeNode.children\"\n                    :title=\"child.title\"\n                  >\n                    <a-icon slot=\"icon\" type=\"carry-out\" />\n                    <span slot=\"title\" style=\"color: #1890ff\">{{\n                      child.title\n                    }}</span>\n                    <!-- 可以继续嵌套更多的 a-tree-node 用于处理更深层级的树节点 -->\n                    <a-tree-node\n                      :key=\"child_.key\"\n                      v-for=\"child_ in child.children\"\n                      :title=\"child_.title\"\n                    >\n                      <a-icon slot=\"icon\" type=\"carry-out\" />\n                      <span slot=\"title\" style=\"color: #1890ff\">{{\n                        child_.title\n                      }}</span>\n                      <!-- 可以继续嵌套更多的 a-tree-node 用于处理更深层级的树节点 -->\n                    </a-tree-node>\n                  </a-tree-node>\n                </a-tree-node>\n              </a-tree>\n            </div>\n          </div>\n        </a-layout-content>\n      </a-col>\n      <a-col :span=\"18\">\n        <a-layout-content\n          :style=\"{\n            background: '#fff',\n            padding: '24px',\n            height: '500px',\n            overflow: 'initial',\n            margin: '20px 5px',\n            top: '64px',\n          }\"\n        >\n          <span>\n            <a-input-search style=\"width: 200px\" @search=\"onSearch\" />\n            <span style=\"margin-left: 8px\">\n              <a-button type=\"primary\" @click=\"showModal\">添加</a-button>\n              <a-modal\n                title=\"添加用户\"\n                :visible=\"visible\"\n                :confirm-loading=\"confirmLoading\"\n                @ok=\"handleOk\"\n                @cancel=\"handleCancel\"\n              >\n                <a-form>\n                  <a-form-item\n                    :label-col=\"formItemLayout.labelCol\"\n                    :wrapper-col=\"formItemLayout.wrapperCol\"\n                    label=\"用户名称\"\n                  >\n                    <a-input\n                      v-decorator=\"[\n                        'userName',\n                        {\n                          rules: [\n                            {\n                              required: true,\n                              message: '请输入',\n                            },\n                          ],\n                        },\n                      ]\"\n                      placeholder=\"请输入\"\n                      v-model=\"form.userName\"\n                    />\n                  </a-form-item>\n                  <a-form-item\n                    :label-col=\"formItemLayout.labelCol\"\n                    :wrapper-col=\"formItemLayout.wrapperCol\"\n                    label=\"用户id\"\n                  >\n                    <a-input\n                      v-decorator=\"[\n                        'userId',\n                        {\n                          rules: [\n                            {\n                              required: true,\n                              message: '请输入',\n                            },\n                          ],\n                        },\n                      ]\"\n                      placeholder=\"请输入\"\n                      v-model=\"form.userId\"\n                    />\n                  </a-form-item>\n                  <a-form-item\n                    :label-col=\"formItemLayout.labelCol\"\n                    :wrapper-col=\"formItemLayout.wrapperCol\"\n                    label=\"公司序号\"\n                  >\n                    <a-input\n                      v-decorator=\"[\n                        'companyNumber',\n                        {\n                          rules: [\n                            {\n                              required: true,\n                              message: '请输入',\n                            },\n                          ],\n                        },\n                      ]\"\n                      placeholder=\"请输入\"\n                      v-model=\"form.companyNumber\"\n                    />\n                  </a-form-item>\n                  <a-form-item\n                    :label-col=\"formItemLayout.labelCol\"\n                    :wrapper-col=\"formItemLayout.wrapperCol\"\n                    label=\"部门序号\"\n                  >\n                    <a-input\n                      v-decorator=\"[\n                        'departmentNumber',\n                        {\n                          rules: [\n                            {\n                              required: true,\n                              message: '请输入',\n                            },\n                          ],\n                        },\n                      ]\"\n                      placeholder=\"请输入\"\n                      v-model=\"form.departmentNumber\"\n                    />\n                  </a-form-item>\n                  <a-form-item :label-col=\"4\" :wrapper-col=\"16\" label=\"角色\">\n                    <a-checkbox-group\n                      v-model=\"checkedList_new\"\n                      :options=\"plainOptions\"\n                    />\n                  </a-form-item>\n                  <a-form-item\n                    :label-col=\"formTailLayout.labelCol\"\n                    :wrapper-col=\"formTailLayout.wrapperCol\"\n                  >\n                  </a-form-item>\n                  <a-form-item\n                    :label-col=\"formTailLayout.labelCol\"\n                    :wrapper-col=\"formTailLayout.wrapperCol\"\n                  >\n                    <!-- <a-button type=\"primary\" @click=\"check\">提交</a-button> -->\n                  </a-form-item>\n                </a-form>\n              </a-modal>\n            </span>\n            <!-- <router-link to=\"/addUser\">\n              <a-button type=\"primary\" style=\"margin-left: 10%\" @click=\"onAdd\">\n                添加\n              </a-button>\n            </router-link> -->\n          </span>\n          <br />\n          <br />\n          <a-table\n            :columns=\"columns\"\n            :data-source=\"positionList\"\n            :scroll=\"{ x: 1500, y: 300 }\"\n            :v-for=\"(position, index) in positionList\"\n            @change=\"onChange\"\n          >\n            <a slot=\"action\">编辑</a>\n            <a slot=\"action\" slot-scope=\"text, record\">\n              <a @click=\"deleteAutho(record)\">删除</a>\n              <a @click=\"showModaledit(record)\" style=\"margin-left: 8px\"\n                >编辑</a\n              >\n            </a>\n          </a-table>\n          <a-modal\n            title=\"编辑用户\"\n            :visible=\"visibleEdit\"\n            :confirm-loading=\"confirmLoading\"\n            @ok=\"handleOkEdit\"\n            @cancel=\"handleCancelEdit\"\n          >\n            <a-form-item>\n              <a-form-item\n                :label-col=\"formItemLayout.labelCol\"\n                :wrapper-col=\"formItemLayout.wrapperCol\"\n                label=\"用户名称\"\n              >\n                <a-input\n                  v-decorator=\"[\n                    'userName',\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: '请输入',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                  v-model=\"formEdit.userName\"\n                />\n              </a-form-item>\n              <a-form-item\n                :label-col=\"formItemLayout.labelCol\"\n                :wrapper-col=\"formItemLayout.wrapperCol\"\n                label=\"用户id\"\n              >\n                <a-input\n                  v-decorator=\"[\n                    'userId',\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: '请输入',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                  v-model=\"formEdit.userId\"\n                />\n              </a-form-item>\n              <a-form-item\n                :label-col=\"formItemLayout.labelCol\"\n                :wrapper-col=\"formItemLayout.wrapperCol\"\n                label=\"公司序号\"\n              >\n                <a-input\n                  v-decorator=\"[\n                    'companyNumber',\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: '请输入',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                  v-model=\"formEdit.companyNumber\"\n                />\n              </a-form-item>\n              <a-form-item\n                :label-col=\"formItemLayout.labelCol\"\n                :wrapper-col=\"formItemLayout.wrapperCol\"\n                label=\"部门序号\"\n              >\n                <a-input\n                  v-decorator=\"[\n                    'departmentNumber',\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: '请输入',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                  v-model=\"formEdit.departmentNumber\"\n                />\n              </a-form-item>\n              <a-form-item :label-col=\"4\" :wrapper-col=\"16\" label=\"角色\">\n                <a-checkbox-group\n                  v-model=\"checkedList\"\n                  :options=\"plainOptions\"\n                />\n              </a-form-item>\n              <a-form-item\n                :label-col=\"formTailLayout.labelCol\"\n                :wrapper-col=\"formTailLayout.wrapperCol\"\n              >\n              </a-form-item>\n              <a-form-item\n                :label-col=\"formTailLayout.labelCol\"\n                :wrapper-col=\"formTailLayout.wrapperCol\"\n              >\n                <!-- <a-button type=\"primary\" @click=\"check\">提交</a-button> -->\n              </a-form-item>\n            </a-form-item>\n          </a-modal>\n        </a-layout-content>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n<script>\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8 },\n};\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 },\n};\nconst columns = [\n  {\n    title: \"序号\",\n    dataIndex: \"userNumber\",\n    key: \"userNumber\",\n    width: 150,\n  },\n  {\n    title: \"用户名称\",\n    dataIndex: \"userName\",\n    key: \"userName\",\n    sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n    sortDirections: [\"descend\", \"ascend\"],\n    width: 150,\n  },\n  {\n    title: \"用户id\",\n    dataIndex: \"userId\",\n    key: \"userId\",\n    width: 150,\n  },\n  {\n    title: \"公司名称\",\n    dataIndex: \"companyName\",\n    key: \"companyName\",\n    sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n    sortDirections: [\"descend\", \"ascend\"],\n    width: 150,\n  },\n  {\n    title: \"部门名称\",\n    dataIndex: \"departmentName\",\n    key: \"departmentName\",\n    sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n    sortDirections: [\"descend\", \"ascend\"],\n    width: 150,\n  },\n  {\n    title: \"岗位名称\",\n    dataIndex: \"positionNumber\",\n    key: \"positionNumber\",\n    sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n    sortDirections: [\"descend\", \"ascend\"],\n    width: 150,\n  },\n  {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    scopedSlots: { customRender: \"action\" },\n  },\n];\nconst data = [];\n// const treeNodes = this.convertToTree(this.company, this.department);\n// const treeNodes = [\n//   {\n//     key: \"0-0\",\n//     title: \"parent 1\",\n//     iconType: \"carry-out\",\n//     titleColor: \"#1890ff\",\n//     children: [\n//       {\n//         key: \"0-0-0\",\n//         title: \"parent 1-0\",\n//         iconType: \"carry-out\",\n//         titleColor: \"#1890ff\",\n//         children: [\n//           {\n//             key: \"0-0-0-0\",\n//             title: \"leaf 1-0-0\",\n//             iconType: \"carry-out\",\n//             titleColor: \"#1890ff\",\n//             children: [], // 可以继续添加子节点\n//           },\n//           {\n//             key: \"0-0-0-1\",\n//             title: \"leaf 1-0-1\",\n//             iconType: \"carry-out\",\n//             titleColor: \"#1890ff\",\n//             children: [], // 可以继续添加子节点\n//           },\n//           // 可以继续添加更多的子节点\n//         ],\n//       },\n//       {\n//         key: \"0-0-1\",\n//         title: \"parent 1-1\",\n//         iconType: \"carry-out\",\n//         titleColor: \"#1890ff\",\n//         children: [\n//           // 可以添加更多的子节点和子子节点\n//         ],\n//       },\n//       // 可以继续添加更多的父节点\n//     ],\n//   },\n// ];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`,\n  });\n}\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\n// 前后端对接的配置\n// import positionApi from \"@/api/positionManage\";\nimport axios from \"axios\";\n//import userApi from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\resource\\\\vue_01\\\\vue_bili_03\\\\vue_bili\\\\src\\\\api\\\\usersManage.js\";\nexport default {\n  data() {\n    return {\n      showLine: true,\n      showIcon: false,\n      data,\n      columns,\n      positionList: [],\n      plainOptions: [],\n      checkedList: [],\n      company: [],\n      department: [],\n      checkedList_new: [],\n      ModalText: \"Content of the modal\",\n      visible: false,\n      visibleEdit: false,\n      confirmLoading: false,\n      checkNick: false,\n      formItemLayout,\n      formTailLayout,\n      form: {\n        userName: \"\",\n        userId: \"\",\n        companyNumber: null,\n        departmentNumber: null,\n      },\n      formEdit: {\n        userName: \"\",\n        userId: \"\",\n        companyNumber: null,\n        departmentNumber: null,\n        userNumber: null,\n      },\n      data1: {},\n      defaultExpandedKeys: [\"0-0-0\", \"0-0-1\", \"0-0-2\"],\n      treeNodes: [], // 后端传输的树节点数据\n    };\n  },\n  methods: {\n    getAllCompany() {\n      var url = \"http://localhost:8090/sys/company/allCompany\";\n      axios\n        .get(url)\n        .then((res) => {\n          // 获得查询结果 BaseResult\n          var baseResult = res.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.company = baseResult.data;\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    getAllDepartment() {\n      var url = \"http://localhost:8090/sys/department/allDepartment\";\n      axios\n        .get(url)\n        .then((res) => {\n          // 获得查询结果 BaseResult\n          var baseResult = res.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.department = baseResult.data;\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    chooseRole(record) {\n      axios\n        .get(\"/sys/belong1/chooseRole\", {\n          params: {\n            userNumber: record.userNumber,\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          if (baseResult.code == 20000) {\n            this.checkedList = baseResult.data;\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    showAllRole() {\n      var url = \"http://localhost:8090/sys/role/allRoleName\";\n      axios\n        .get(url)\n        .then((res) => {\n          // 获得查询结果 BaseResult\n          var baseResult = res.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.plainOptions = baseResult.data;\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    deleteAutho(record) {\n      axios\n        .get(\"/sys/users/userDelete\", {\n          params: {\n            token: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          if (baseResult.code == 20000) {\n            this.deleteRow(record);\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    deleteRow(record) {\n      console.info(\"success delete users\");\n      //提交给后台\n      axios\n        .post(\"/sys/users/deleteUsers\", {\n          userNumber: record.userNumber,\n          userName: record.userName,\n          userId: record.userId,\n          companyNumber: record.companyNumber,\n          departmentNumber: record.departmentNumber,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            if (response.data.code == 20000) {\n              this.$message.success(\"删除成功！\", 5);\n            } else {\n              this.$message.error(\"无法删除\", 5);\n            }\n            this.visible = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    showModal() {\n      this.visible = true;\n    },\n    showModaledit(record) {\n      this.visibleEdit = true;\n      this.formEdit.userId = record.userId;\n      this.formEdit.userName = record.userName;\n      this.formEdit.departmentNumber = record.departmentNumber;\n      this.formEdit.companyNumber = record.companyNumber;\n      this.formEdit.userNumber = record.userNumber;\n      this.showAllRole();\n      this.chooseRole(record);\n    },\n    handleOk(e) {\n      this.visible = false;\n      this.checkAutho();\n    },\n    handleCancel(e) {\n      console.log(\"Clicked cancel button\");\n      this.visible = false;\n    },\n    handleOkEdit(e) {\n      this.visibleEdit = false;\n      this.editAutho();\n      // this.edit();\n    },\n    handleCancelEdit(e) {\n      console.log(\"Clicked cancel button\");\n      this.visibleEdit = false;\n    },\n    onSelect(selectedKeys, info) {\n      console.log(\"selected\", selectedKeys, info);\n    },\n    onSearch(value) {\n      this.data = {\n        userName: value,\n      };\n      console.info(\"search success\");\n      console.info(value);\n      //提交给后台\n      axios\n        .get(\"/sys/users/allSearch\", {\n          params: {\n            userName: value,\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          this.selectsearchClasses(value);\n        });\n    },\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = { ...this.pagination };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    },\n    editAutho() {\n      axios\n        .get(\"/sys/users/userEdit\", {\n          params: {\n            token: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          if (baseResult.code == 20000) {\n            this.edit();\n            this.editRole();\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    edit() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios\n        .post(\"/sys/users/editUsers\", {\n          userNumber: this.formEdit.userNumber,\n          userName: this.formEdit.userName,\n          userId: this.formEdit.userId,\n          companyNumber: this.formEdit.companyNumber,\n          departmentNumber: this.formEdit.departmentNumber,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            this.$message.success(\"成功修改！\", 5);\n            this.visibleEdit = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    editRole() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios\n        .post(\"/sys/role/editRole\", {\n          userNumber: this.formEdit.userNumber,\n          userRole: this.checkedList,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            this.$message.success(\"成功修改！\", 5);\n            this.visibleEdit = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    onAdd() {\n      console.log(\"点击了添加\");\n    },\n    checkAutho() {\n      axios\n        .get(\"/sys/users/userAdd\", {\n          params: {\n            token: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          if (baseResult.code == 20000) {\n            this.check();\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    check() {\n      console.info(\"success\");\n      //提交给后台\n      axios\n        .post(\"/sys/users/addUsers\", {\n          userName: this.form.userName,\n          userId: this.form.userId,\n          companyNumber: this.form.companyNumber,\n          departmentNumber: this.form.departmentNumber,\n          userRole: this.checkedList_new,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            this.$message.success(\"成功添加！\", 10);\n            this.visible = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    // 添加下面这个方法来提交表单数据给后端\n    submitForm() {\n      // 从这里发送 POST 请求，将 this.form 中的数据发送给后端\n      axios\n        .post(\"/addUsers\", this.form)\n        .then((response) => {\n          // 处理成功响应\n          console.log(\"成功发送表单数据至后端\", response);\n        })\n        .catch((error) => {\n          // 处理错误\n          console.error(\"发送表单数据至后端出错\", error);\n        });\n    },\n    onChange,\n    // getPositionList() {\n    //   // userApi.getUserList 开始调用后端，并传递参数searchModel\n    //   // then表示后端查询后返回的数据\n    //   positionApi.getPositionList().then((response) => {\n    //     this.positionList = response.data.rows;\n    //     this.total = response.data.total;\n    //   });\n    // },\n    async fetchData() {\n      try {\n        const response = axios.get(\"http://localhost:8090/sys/users/all\"); // 使用正确的URL来获取后端数据\n        const responseData = response.data; // 从响应中提取数据\n        if (responseData.code === 20000) {\n          this.positionList = responseData.data; // 将后端返回的数据赋值给前端的data变量\n        } else {\n          console.error(responseData.message); // 如果出现错误，输出错误信息\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    selectAllClasses() {\n      // ajax 查询\n      var url = \"http://localhost:8090/sys/users/all\";\n      axios\n        .get(url)\n        .then((res) => {\n          // 获得查询结果 BaseResult\n          var baseResult = res.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.positionList = baseResult.data;\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    selectsearchClasses(userName) {\n      // ajax 查询\n      console.log(\"search\");\n      var url =\n        \"http://localhost:8090/sys/users/allSearch?userName=\" + userName;\n      axios\n        .get(url)\n        .then((response) => {\n          // 获得查询结果 BaseResult\n          var baseResult = response.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.positionList = baseResult.data;\n            this.$message.success(\"成功查询！\", 5);\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    convertToTree(companyList, departmentList) {\n      const treeNodes = [];\n\n      companyList.forEach((company, index) => {\n        const companyNode = {\n          key: `0-${index}`,\n          title: company.companyName,\n          iconType: \"carry-out\",\n          titleColor: \"#1890ff\",\n          children: [],\n        };\n\n        const departments = departmentList.filter(\n          (department) => department.companyNumber === company.companyNumber\n        );\n\n        departments.forEach((department, depIndex) => {\n          const departmentNode = {\n            key: `0-${index}-${depIndex}`,\n            title: department.departmentName,\n            iconType: \"carry-out\",\n            titleColor: \"#1890ff\",\n            children: [],\n          };\n          companyNode.children.push(departmentNode);\n        });\n\n        treeNodes.push(companyNode);\n      });\n      this.treeNodes = JSON.stringify(treeNodes, null, 2);\n      return JSON.stringify(treeNodes, null, 2); // Convert to string with indentation\n    },\n  },\n  created() {\n    // this.fetchData();\n    this.selectAllClasses();\n    this.showAllRole();\n    this.getAllCompany();\n    this.getAllDepartment();\n    this.convertToTree(this.company, this.department);\n    console.log(this.tree)\n  },\n};\n</script>\n<style>\n.div_form {\n  width: 10% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.form {\n  width: 50% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.outer-container {\n  width: 50%; /* 控制外部容器的宽度 */\n  margin: 0 auto; /* 让外部容器水平居中对齐 */\n}\n\n.custom-label::before {\n  content: \"*\";\n  color: red; /* 设置星号颜色 */\n  margin-left: 4px; /* 设置星号与标签之间的距离 */\n}\n\n.div_top {\n  background-color: white;\n  width: 100%;\n  height: 100%;\n}\n.editable-cell {\n  position: relative;\n}\n\n.editable-cell-input-wrapper,\n.editable-cell-text-wrapper {\n  padding-right: 24px;\n}\n\n.editable-cell-text-wrapper {\n  padding: 5px 24px 5px 5px;\n}\n\n.editable-cell-icon,\n.editable-cell-icon-check {\n  position: absolute;\n  right: 0;\n  width: 20px;\n  cursor: pointer;\n}\n\n.editable-cell-icon {\n  line-height: 18px;\n  display: none;\n}\n\n.editable-cell-icon-check {\n  line-height: 28px;\n}\n\n.editable-cell:hover .editable-cell-icon {\n  display: inline-block;\n}\n\n.editable-cell-icon:hover,\n.editable-cell-icon-check:hover {\n  color: #108ee9;\n}\n\n.editable-add-btn {\n  margin-bottom: 8px;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoVA,MAAAA,cAAA;EACAC,QAAA;IAAAC,IAAA;EAAA;EACAC,UAAA;IAAAD,IAAA;EAAA;AACA;AACA,MAAAE,cAAA;EACAH,QAAA;IAAAC,IAAA;EAAA;EACAC,UAAA;IAAAD,IAAA;IAAAG,MAAA;EAAA;AACA;AACA,MAAAC,OAAA,IACA;EACAC,KAAA;EACAC,SAAA;EACAC,GAAA;EACAC,KAAA;AACA,GACA;EACAH,KAAA;EACAC,SAAA;EACAC,GAAA;EACAE,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,YAAA,CAAAC,aAAA,CAAAF,CAAA,CAAAC,YAAA;EACAE,cAAA;EACAN,KAAA;AACA,GACA;EACAH,KAAA;EACAC,SAAA;EACAC,GAAA;EACAC,KAAA;AACA,GACA;EACAH,KAAA;EACAC,SAAA;EACAC,GAAA;EACAE,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,YAAA,CAAAC,aAAA,CAAAF,CAAA,CAAAC,YAAA;EACAE,cAAA;EACAN,KAAA;AACA,GACA;EACAH,KAAA;EACAC,SAAA;EACAC,GAAA;EACAE,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,YAAA,CAAAC,aAAA,CAAAF,CAAA,CAAAC,YAAA;EACAE,cAAA;EACAN,KAAA;AACA,GACA;EACAH,KAAA;EACAC,SAAA;EACAC,GAAA;EACAE,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,YAAA,CAAAC,aAAA,CAAAF,CAAA,CAAAC,YAAA;EACAE,cAAA;EACAN,KAAA;AACA,GACA;EACAH,KAAA;EACAE,GAAA;EACAQ,KAAA;EACAP,KAAA;EACAQ,WAAA;IAAAC,YAAA;EAAA;AACA,EACA;AACA,MAAAC,IAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAAC,CAAA,MAAAA,CAAA,QAAAA,CAAA;EACAD,IAAA,CAAAE,IAAA;IACAb,GAAA,EAAAY,CAAA;IACAE,IAAA,aAAAF,CAAA;IACAG,GAAA;IACAC,OAAA,qBAAAJ,CAAA;EACA;AACA;AACA,SAAAK,SAAAC,UAAA,EAAAC,OAAA,EAAAjB,MAAA;EACAkB,OAAA,CAAAC,GAAA,WAAAH,UAAA,EAAAC,OAAA,EAAAjB,MAAA;AACA;AACA;AACA;AACA,OAAAoB,KAAA;AACA;AACA;EACAX,KAAA;IACA;MACAY,QAAA;MACAC,QAAA;MACAb,IAAA;MACAd,OAAA;MACA4B,YAAA;MACAC,YAAA;MACAC,WAAA;MACAC,OAAA;MACAC,UAAA;MACAC,eAAA;MACAC,SAAA;MACAC,OAAA;MACAC,WAAA;MACAC,cAAA;MACAC,SAAA;MACA5C,cAAA;MACAI,cAAA;MACAyC,IAAA;QACAC,QAAA;QACAC,MAAA;QACAC,aAAA;QACAC,gBAAA;MACA;MACAC,QAAA;QACAJ,QAAA;QACAC,MAAA;QACAC,aAAA;QACAC,gBAAA;QACAE,UAAA;MACA;MACAC,KAAA;MACAC,mBAAA;MACAC,SAAA;IACA;EACA;;EACAC,OAAA;IACAC,cAAA;MACA,IAAAC,GAAA;MACA1B,KAAA,CACA2B,GAAA,CAAAD,GAAA,EACAE,IAAA,CAAAC,GAAA;QACA;QACA,IAAAC,UAAA,GAAAD,GAAA,CAAAxC,IAAA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
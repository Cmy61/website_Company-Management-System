{"ast":null,"code":"const columns = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  filters: [{\n    text: \"Joe\",\n    value: \"Joe\"\n  }, {\n    text: \"Jim\",\n    value: \"Jim\"\n  }, {\n    text: \"Submenu\",\n    value: \"Submenu\",\n    children: [{\n      text: \"Green\",\n      value: \"Green\"\n    }, {\n      text: \"Black\",\n      value: \"Black\"\n    }]\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: [\"descend\"]\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"London\",\n    value: \"London\"\n  }, {\n    text: \"New York\",\n    value: \"New York\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}];\nconst data = [{\n  key: \"1\",\n  name: \"John Brown\",\n  age: 32,\n  address: \"New York No. 1 Lake Park\"\n}, {\n  key: \"2\",\n  name: \"Jim Green\",\n  age: 42,\n  address: \"London No. 1 Lake Park\"\n}, {\n  key: \"3\",\n  name: \"Joe Black\",\n  age: 32,\n  address: \"Sidney No. 1 Lake Park\"\n}, {\n  key: \"4\",\n  name: \"Jim Red\",\n  age: 32,\n  address: \"London No. 2 Lake Park\"\n}];\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\nexport default {\n  data() {\n    return {\n      data,\n      pagination: {},\n      loading: false,\n      columns,\n      expand: false,\n      form: this.$form.createForm(this, {\n        name: \"advanced_search\"\n      }),\n      // columns: [\n      //   { label: \"规则名称\", value: \"\" },\n      //   { label: \"描述\", value: \"\" },\n      //   { label: \"服务调用次数\", value: \"\" },\n      //   { label: \"状态\", value: \"\" },\n      //   { label: \"上次调用时间\", value: \"\" },\n      //   // 添加其他列的名称和初始值\n      // ],\n      column: [\"规则名称\", \"描述\", \"服务调用次数\", \"状态\", \"上次调用时间\"],\n      value: [\"\", \"\", \"\", \"\", \"\"]\n    };\n  },\n  computed: {\n    count() {\n      return this.expand ? 6 : 3;\n    }\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleSearch(e) {\n      e.preventDefault();\n      this.form.validateFields((error, values) => {\n        console.log(\"error\", error);\n        console.log(\"Received values of form: \", values);\n      });\n    },\n    handleReset() {\n      this.form.resetFields();\n    },\n    toggle() {\n      this.expand = !this.expand;\n    },\n    onChange\n  }\n};","map":{"version":3,"names":["columns","title","dataIndex","filters","text","value","children","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","filterMultiple","address","data","key","onChange","pagination","console","log","loading","expand","form","$form","createForm","column","computed","count","updated","mounted","fetch","methods","handleSearch","e","preventDefault","validateFields","error","values","handleReset","resetFields","toggle"],"sources":["src/views/home/list/QueryView.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"div_top\"></div>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '0px',\n        margin: '0',\n        height: '100px',\n        overflow: 'initial',\n        width: '150%',\n        top: '64px',\n        marginLeft: '-7%',\n        marginRight: '0',\n      }\"\n    >\n      <h1>查询表格</h1>\n    </a-layout-content>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '24px',\n        margin: '24px auto 0',\n        minHeight: '100px',\n        overflow: 'initial',\n        width: '100%',\n        top: '64px',\n      }\"\n    >\n      <div id=\"components-form-demo-advanced-search\">\n        <a-form\n          class=\"ant-advanced-search-form\"\n          :form=\"form\"\n          @submit=\"handleSearch\"\n        >\n          <a-row :gutter=\"18\">\n            <a-col\n              v-for=\"i in 5\"\n              :key=\"i\"\n              :span=\"8\"\n              :style=\"{ display: i <= count ? 'block' : 'none' }\"\n            >\n              <a-form-item>\n                <label>{{ column[i - 1] }}: </label>\n                <a-input\n                  v-model=\"value[i - 1]\"\n                  style=\"width: 50%; text-align: left\"\n                  v-decorator=\"[\n                    `field-${i}`,\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: 'Input something!',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                />\n              </a-form-item>\n            </a-col>\n          </a-row>\n          <a-row>\n            <a-col :span=\"24\" :style=\"{ textAlign: 'right' }\">\n              <a-button type=\"primary\" html-type=\"submit\">查询</a-button>\n              <a-button :style=\"{ marginLeft: '8px' }\" @click=\"handleReset\"\n                >清空</a-button\n              >\n              <a\n                :style=\"{ marginLeft: '8px', fontSize: '12px' }\"\n                @click=\"toggle\"\n              >\n                收起 <a-icon :type=\"expand ? 'up' : 'down'\" />\n              </a>\n            </a-col>\n          </a-row>\n        </a-form>\n      </div>\n    </a-layout-content>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '24px',\n        margin: '24px auto 0',\n        minHeight: '280px',\n        overflow: 'initial',\n        width: '100%',\n        top: '64px',\n        height: '150px',\n      }\"\n    >\n      <a-table :columns=\"columns\" :data-source=\"data\" @change=\"onChange\" />\n    </a-layout-content>\n  </div>\n</template>\n\n<script>\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    filters: [\n      {\n        text: \"Joe\",\n        value: \"Joe\",\n      },\n      {\n        text: \"Jim\",\n        value: \"Jim\",\n      },\n      {\n        text: \"Submenu\",\n        value: \"Submenu\",\n        children: [\n          {\n            text: \"Green\",\n            value: \"Green\",\n          },\n          {\n            text: \"Black\",\n            value: \"Black\",\n          },\n        ],\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: [\"descend\"],\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"London\",\n        value: \"London\",\n      },\n      {\n        text: \"New York\",\n        value: \"New York\",\n      },\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"],\n  },\n];\n\nconst data = [\n  {\n    key: \"1\",\n    name: \"John Brown\",\n    age: 32,\n    address: \"New York No. 1 Lake Park\",\n  },\n  {\n    key: \"2\",\n    name: \"Jim Green\",\n    age: 42,\n    address: \"London No. 1 Lake Park\",\n  },\n  {\n    key: \"3\",\n    name: \"Joe Black\",\n    age: 32,\n    address: \"Sidney No. 1 Lake Park\",\n  },\n  {\n    key: \"4\",\n    name: \"Jim Red\",\n    age: 32,\n    address: \"London No. 2 Lake Park\",\n  },\n];\n\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\nexport default {\n  data() {\n    return {\n      data,\n      pagination: {},\n      loading: false,\n      columns,\n      expand: false,\n      form: this.$form.createForm(this, { name: \"advanced_search\" }),\n      // columns: [\n      //   { label: \"规则名称\", value: \"\" },\n      //   { label: \"描述\", value: \"\" },\n      //   { label: \"服务调用次数\", value: \"\" },\n      //   { label: \"状态\", value: \"\" },\n      //   { label: \"上次调用时间\", value: \"\" },\n      //   // 添加其他列的名称和初始值\n      // ],\n      column: [\"规则名称\", \"描述\", \"服务调用次数\", \"状态\", \"上次调用时间\"],\n      value: [\"\", \"\", \"\", \"\", \"\"],\n    };\n  },\n  computed: {\n    count() {\n      return this.expand ? 6 : 3;\n    },\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleSearch(e) {\n      e.preventDefault();\n      this.form.validateFields((error, values) => {\n        console.log(\"error\", error);\n        console.log(\"Received values of form: \", values);\n      });\n    },\n\n    handleReset() {\n      this.form.resetFields();\n    },\n\n    toggle() {\n      this.expand = !this.expand;\n    },\n    onChange,\n  },\n};\n</script>\n<style>\n.div_form {\n  width: 10% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.form {\n  width: 50% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.outer-container {\n  width: 50%; /* 控制外部容器的宽度 */\n  margin: 0 auto; /* 让外部容器水平居中对齐 */\n}\n\n.div_top {\n  background-color: white;\n  width: 100%;\n  height: 100%;\n}\n\n.ant-advanced-search-form .ant-form-item {\n  display: flex;\n}\n\n.ant-advanced-search-form .ant-form-item-control-wrapper {\n  flex: 1;\n}\n\n#components-form-demo-advanced-search .ant-form {\n  max-width: none;\n}\n</style>\n"],"mappings":"AAkGA,MAAAA,OAAA,IACA;EACAC,KAAA;EACAC,SAAA;EACAC,OAAA,GACA;IACAC,IAAA;IACAC,KAAA;EACA,GACA;IACAD,IAAA;IACAC,KAAA;EACA,GACA;IACAD,IAAA;IACAC,KAAA;IACAC,QAAA,GACA;MACAF,IAAA;MACAC,KAAA;IACA,GACA;MACAD,IAAA;MACAC,KAAA;IACA;EAEA,EACA;EACA;EACA;EACAE,QAAA,EAAAA,CAAAF,KAAA,EAAAG,MAAA,KAAAA,MAAA,CAAAC,IAAA,CAAAC,OAAA,CAAAL,KAAA;EACAM,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAH,IAAA,CAAAK,MAAA,GAAAD,CAAA,CAAAJ,IAAA,CAAAK,MAAA;EACAC,cAAA;AACA,GACA;EACAd,KAAA;EACAC,SAAA;EACAc,gBAAA;EACAL,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAK,GAAA,GAAAJ,CAAA,CAAAI;AACA,GACA;EACAhB,KAAA;EACAC,SAAA;EACAC,OAAA,GACA;IACAC,IAAA;IACAC,KAAA;EACA,GACA;IACAD,IAAA;IACAC,KAAA;EACA,EACA;EACAa,cAAA;EACAX,QAAA,EAAAA,CAAAF,KAAA,EAAAG,MAAA,KAAAA,MAAA,CAAAW,OAAA,CAAAT,OAAA,CAAAL,KAAA;EACAM,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAO,OAAA,CAAAL,MAAA,GAAAD,CAAA,CAAAM,OAAA,CAAAL,MAAA;EACAC,cAAA;AACA,EACA;AAEA,MAAAK,IAAA,IACA;EACAC,GAAA;EACAZ,IAAA;EACAQ,GAAA;EACAE,OAAA;AACA,GACA;EACAE,GAAA;EACAZ,IAAA;EACAQ,GAAA;EACAE,OAAA;AACA,GACA;EACAE,GAAA;EACAZ,IAAA;EACAQ,GAAA;EACAE,OAAA;AACA,GACA;EACAE,GAAA;EACAZ,IAAA;EACAQ,GAAA;EACAE,OAAA;AACA,EACA;AAEA,SAAAG,SAAAC,UAAA,EAAApB,OAAA,EAAAQ,MAAA;EACAa,OAAA,CAAAC,GAAA,WAAAF,UAAA,EAAApB,OAAA,EAAAQ,MAAA;AACA;AACA;EACAS,KAAA;IACA;MACAA,IAAA;MACAG,UAAA;MACAG,OAAA;MACA1B,OAAA;MACA2B,MAAA;MACAC,IAAA,OAAAC,KAAA,CAAAC,UAAA;QAAArB,IAAA;MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAsB,MAAA;MACA1B,KAAA;IACA;EACA;EACA2B,QAAA;IACAC,MAAA;MACA,YAAAN,MAAA;IACA;EACA;EACAO,QAAA;IACAV,OAAA,CAAAC,GAAA;EACA;EACAU,QAAA;IACA,KAAAC,KAAA;EACA;EACAC,OAAA;IACAC,aAAAC,CAAA;MACAA,CAAA,CAAAC,cAAA;MACA,KAAAZ,IAAA,CAAAa,cAAA,EAAAC,KAAA,EAAAC,MAAA;QACAnB,OAAA,CAAAC,GAAA,UAAAiB,KAAA;QACAlB,OAAA,CAAAC,GAAA,8BAAAkB,MAAA;MACA;IACA;IAEAC,YAAA;MACA,KAAAhB,IAAA,CAAAiB,WAAA;IACA;IAEAC,OAAA;MACA,KAAAnB,MAAA,SAAAA,MAAA;IACA;IACAL;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
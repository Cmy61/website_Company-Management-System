{"ast":null,"code":"import axios from \"axios\";\nconst queryData = params => {\n  return axios.get(\"https://randomuser.me/api\", {\n    params: params\n  });\n};\nconst columns = [{\n  title: \"规则名称\",\n  dataIndex: \"ruleName\",\n  width: \"20%\"\n}, {\n  title: \"描述\",\n  dataIndex: \"describe\",\n  width: \"20%\"\n}, {\n  title: \"服务调用次数\",\n  sorter: true,\n  dataIndex: \"times\"\n}, {\n  title: \"服务调用次数\",\n  sorter: true,\n  dataIndex: \"times\"\n}, {\n  title: \"服务调用次数\",\n  sorter: true,\n  dataIndex: \"times\"\n}];\nexport default {\n  data() {\n    return {\n      data: [],\n      pagination: {},\n      loading: false,\n      columns,\n      expand: false,\n      form: this.$form.createForm(this, {\n        name: \"advanced_search\"\n      }),\n      // columns: [\n      //   { label: \"规则名称\", value: \"\" },\n      //   { label: \"描述\", value: \"\" },\n      //   { label: \"服务调用次数\", value: \"\" },\n      //   { label: \"状态\", value: \"\" },\n      //   { label: \"上次调用时间\", value: \"\" },\n      //   // 添加其他列的名称和初始值\n      // ],\n      column: [\"规则名称\", \"描述\", \"服务调用次数\", \"状态\", \"上次调用时间\"],\n      value: [\"\", \"\", \"\", \"\", \"\"]\n    };\n  },\n  computed: {\n    count() {\n      return this.expand ? 6 : 3;\n    }\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleSearch(e) {\n      e.preventDefault();\n      this.form.validateFields((error, values) => {\n        console.log(\"error\", error);\n        console.log(\"Received values of form: \", values);\n      });\n    },\n    handleReset() {\n      this.form.resetFields();\n    },\n    toggle() {\n      this.expand = !this.expand;\n    },\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = {\n        ...this.pagination\n      };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    },\n    fetch(params = {}) {\n      this.loading = true;\n      queryData({\n        results: 10,\n        ...params\n      }).then(({\n        data\n      }) => {\n        const pagination = {\n          ...this.pagination\n        };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = 200;\n        this.loading = false;\n        this.data = data.results;\n        this.pagination = pagination;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","queryData","params","get","columns","title","dataIndex","width","sorter","data","pagination","loading","expand","form","$form","createForm","name","column","value","computed","count","updated","console","log","mounted","fetch","methods","handleSearch","e","preventDefault","validateFields","error","values","handleReset","resetFields","toggle","handleTableChange","filters","pager","current","results","pageSize","page","sortField","field","sortOrder","order","then","total"],"sources":["src/views/home/list/QueryView.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"div_top\"></div>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '0px',\n        margin: '0',\n        height: '100px',\n        overflow: 'initial',\n        width: '150%',\n        top: '64px',\n        marginLeft: '-7%',\n        marginRight: '0',\n      }\"\n    >\n      <h1>查询表格</h1>\n    </a-layout-content>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '24px',\n        margin: '24px auto 0',\n        minHeight: '100px',\n        overflow: 'initial',\n        width: '100%',\n        top: '64px',\n      }\"\n    >\n      <div id=\"components-form-demo-advanced-search\">\n        <a-form\n          class=\"ant-advanced-search-form\"\n          :form=\"form\"\n          @submit=\"handleSearch\"\n        >\n          <a-row :gutter=\"18\">\n            <a-col\n              v-for=\"i in 5\"\n              :key=\"i\"\n              :span=\"8\"\n              :style=\"{ display: i <= count ? 'block' : 'none' }\"\n            >\n              <a-form-item>\n                <label>{{ column[i - 1] }}: </label>\n                <a-input\n                  v-model=\"value[i - 1]\"\n                  style=\"width: 50%; text-align: left\"\n                  v-decorator=\"[\n                    `field-${i}`,\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: 'Input something!',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                />\n              </a-form-item>\n            </a-col>\n          </a-row>\n          <a-row>\n            <a-col :span=\"24\" :style=\"{ textAlign: 'right' }\">\n              <a-button type=\"primary\" html-type=\"submit\">查询</a-button>\n              <a-button :style=\"{ marginLeft: '8px' }\" @click=\"handleReset\"\n                >清空</a-button\n              >\n              <a\n                :style=\"{ marginLeft: '8px', fontSize: '12px' }\"\n                @click=\"toggle\"\n              >\n                收起 <a-icon :type=\"expand ? 'up' : 'down'\" />\n              </a>\n            </a-col>\n          </a-row>\n        </a-form>\n      </div>\n    </a-layout-content>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '24px',\n        margin: '24px auto 0',\n        minHeight: '280px',\n        overflow: 'initial',\n        width: '100%',\n        top: '64px',\n        height: '150px',\n      }\"\n    >\n      <a-table :columns=\"columns\" :data-source=\"data\">\n        <a slot=\"name\" slot-scope=\"text\">{{ text }}</a>\n        <span slot=\"customTitle\"> 姓名</span>\n        <span slot=\"action\">\n          <a>Delete</a>\n        </span>\n      </a-table>\n    </a-layout-content>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nconst queryData = (params) => {\n  return axios.get(\"https://randomuser.me/api\", { params: params });\n};\nconst columns = [\n  {\n    title: \"规则名称\",\n    dataIndex: \"ruleName\",\n    width: \"20%\",\n  },\n  {\n    title: \"描述\",\n    dataIndex: \"describe\",\n    width: \"20%\",\n  },\n  {\n    title: \"服务调用次数\",\n    sorter: true,\n    dataIndex: \"times\",\n  },\n  {\n    title: \"服务调用次数\",\n    sorter: true,\n    dataIndex: \"times\",\n  },\n  {\n    title: \"服务调用次数\",\n    sorter: true,\n    dataIndex: \"times\",\n  },\n];\nexport default {\n  data() {\n    return {\n      data: [],\n      pagination: {},\n      loading: false,\n      columns,\n      expand: false,\n      form: this.$form.createForm(this, { name: \"advanced_search\" }),\n      // columns: [\n      //   { label: \"规则名称\", value: \"\" },\n      //   { label: \"描述\", value: \"\" },\n      //   { label: \"服务调用次数\", value: \"\" },\n      //   { label: \"状态\", value: \"\" },\n      //   { label: \"上次调用时间\", value: \"\" },\n      //   // 添加其他列的名称和初始值\n      // ],\n      column: [\"规则名称\", \"描述\", \"服务调用次数\", \"状态\", \"上次调用时间\"],\n      value: [\"\", \"\", \"\", \"\", \"\"],\n    };\n  },\n  computed: {\n    count() {\n      return this.expand ? 6 : 3;\n    },\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleSearch(e) {\n      e.preventDefault();\n      this.form.validateFields((error, values) => {\n        console.log(\"error\", error);\n        console.log(\"Received values of form: \", values);\n      });\n    },\n\n    handleReset() {\n      this.form.resetFields();\n    },\n\n    toggle() {\n      this.expand = !this.expand;\n    },\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = { ...this.pagination };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    },\n    fetch(params = {}) {\n      this.loading = true;\n      queryData({\n        results: 10,\n        ...params,\n      }).then(({ data }) => {\n        const pagination = { ...this.pagination };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = 200;\n        this.loading = false;\n        this.data = data.results;\n        this.pagination = pagination;\n      });\n    },\n  },\n};\n</script>\n<style>\n.div_form {\n  width: 10% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.form {\n  width: 50% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.outer-container {\n  width: 50%; /* 控制外部容器的宽度 */\n  margin: 0 auto; /* 让外部容器水平居中对齐 */\n}\n\n.div_top {\n  background-color: white;\n  width: 100%;\n  height: 100%;\n}\n\n.ant-advanced-search-form .ant-form-item {\n  display: flex;\n}\n\n.ant-advanced-search-form .ant-form-item-control-wrapper {\n  flex: 1;\n}\n\n#components-form-demo-advanced-search .ant-form {\n  max-width: none;\n}\n</style>\n"],"mappings":"AAwGA,OAAAA,KAAA;AACA,MAAAC,SAAA,GAAAC,MAAA;EACA,OAAAF,KAAA,CAAAG,GAAA;IAAAD,MAAA,EAAAA;EAAA;AACA;AACA,MAAAE,OAAA,IACA;EACAC,KAAA;EACAC,SAAA;EACAC,KAAA;AACA,GACA;EACAF,KAAA;EACAC,SAAA;EACAC,KAAA;AACA,GACA;EACAF,KAAA;EACAG,MAAA;EACAF,SAAA;AACA,GACA;EACAD,KAAA;EACAG,MAAA;EACAF,SAAA;AACA,GACA;EACAD,KAAA;EACAG,MAAA;EACAF,SAAA;AACA,EACA;AACA;EACAG,KAAA;IACA;MACAA,IAAA;MACAC,UAAA;MACAC,OAAA;MACAP,OAAA;MACAQ,MAAA;MACAC,IAAA,OAAAC,KAAA,CAAAC,UAAA;QAAAC,IAAA;MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,MAAA;MACA,YAAAR,MAAA;IACA;EACA;EACAS,QAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAC,QAAA;IACA,KAAAC,KAAA;EACA;EACAC,OAAA;IACAC,aAAAC,CAAA;MACAA,CAAA,CAAAC,cAAA;MACA,KAAAhB,IAAA,CAAAiB,cAAA,EAAAC,KAAA,EAAAC,MAAA;QACAV,OAAA,CAAAC,GAAA,UAAAQ,KAAA;QACAT,OAAA,CAAAC,GAAA,8BAAAS,MAAA;MACA;IACA;IAEAC,YAAA;MACA,KAAApB,IAAA,CAAAqB,WAAA;IACA;IAEAC,OAAA;MACA,KAAAvB,MAAA,SAAAA,MAAA;IACA;IACAwB,kBAAA1B,UAAA,EAAA2B,OAAA,EAAA7B,MAAA;MACAc,OAAA,CAAAC,GAAA,CAAAb,UAAA;MACA,MAAA4B,KAAA;QAAA,QAAA5B;MAAA;MACA4B,KAAA,CAAAC,OAAA,GAAA7B,UAAA,CAAA6B,OAAA;MACA,KAAA7B,UAAA,GAAA4B,KAAA;MACA,KAAAb,KAAA;QACAe,OAAA,EAAA9B,UAAA,CAAA+B,QAAA;QACAC,IAAA,EAAAhC,UAAA,CAAA6B,OAAA;QACAI,SAAA,EAAAnC,MAAA,CAAAoC,KAAA;QACAC,SAAA,EAAArC,MAAA,CAAAsC,KAAA;QACA,GAAAT;MACA;IACA;IACAZ,MAAAvB,MAAA;MACA,KAAAS,OAAA;MACAV,SAAA;QACAuC,OAAA;QACA,GAAAtC;MACA,GAAA6C,IAAA;QAAAtC;MAAA;QACA,MAAAC,UAAA;UAAA,QAAAA;QAAA;QACA;QACA;QACAA,UAAA,CAAAsC,KAAA;QACA,KAAArC,OAAA;QACA,KAAAF,IAAA,GAAAA,IAAA,CAAA+B,OAAA;QACA,KAAA9B,UAAA,GAAAA,UAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
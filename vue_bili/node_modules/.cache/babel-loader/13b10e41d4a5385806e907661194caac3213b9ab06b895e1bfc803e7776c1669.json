{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\nconst columns = [{\n  title: \"序号\",\n  dataIndex: \"roleNumber\",\n  key: \"roleNumber\",\n  width: 100\n}, {\n  title: \"角色名称\",\n  dataIndex: \"roleName\",\n  key: \"roleName\",\n  sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n  sortDirections: [\"descend\", \"ascend\"],\n  width: 100\n}, {\n  title: \"权限\",\n  dataIndex: \"roleAutho\",\n  key: \"roleAutho\",\n  width: 100\n}, {\n  title: \"Action\",\n  key: \"operation\",\n  fixed: \"right\",\n  width: 100,\n  scopedSlots: {\n    customRender: \"action\"\n  }\n}];\nconst data = [];\nconst treeNodes = [{\n  key: \"0-0\",\n  title: \"parent 1\",\n  iconType: \"carry-out\",\n  titleColor: \"#1890ff\",\n  children: [{\n    key: \"0-0-0\",\n    title: \"parent 1-0\",\n    iconType: \"carry-out\",\n    titleColor: \"#1890ff\",\n    children: [{\n      key: \"0-0-0-0\",\n      title: \"leaf 1-0-0\",\n      iconType: \"carry-out\",\n      titleColor: \"#1890ff\",\n      children: [] // 可以继续添加子节点\n    }, {\n      key: \"0-0-0-1\",\n      title: \"leaf 1-0-1\",\n      iconType: \"carry-out\",\n      titleColor: \"#1890ff\",\n      children: [] // 可以继续添加子节点\n    }\n    // 可以继续添加更多的子节点\n    ]\n  }, {\n    key: \"0-0-1\",\n    title: \"parent 1-1\",\n    iconType: \"carry-out\",\n    titleColor: \"#1890ff\",\n    children: [\n      // 可以添加更多的子节点和子子节点\n    ]\n  }\n  // 可以继续添加更多的父节点\n  ]\n}];\n\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`\n  });\n}\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\n// 前后端对接的配置\n// import positionApi from \"@/api/positionManage\";\nimport axios from \"axios\";\n//import userApi from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\resource\\\\vue_01\\\\vue_bili_03\\\\vue_bili\\\\src\\\\api\\\\usersManage.js\";\nexport default {\n  data() {\n    return {\n      showLine: true,\n      showIcon: false,\n      data,\n      columns,\n      positionList: [],\n      plainOptions: [],\n      checkedList: [],\n      temp: 0,\n      ModalText: \"Content of the modal\",\n      visible: false,\n      visibleEdit: false,\n      confirmLoading: false,\n      checkNick: false,\n      formItemLayout,\n      formTailLayout,\n      checkedList_new: [],\n      form: {\n        userName: \"\",\n        userId: \"\",\n        companyNumber: null,\n        departmentNumber: null\n      },\n      formEdit: {\n        roleName: \"\",\n        roleNumber: \"\",\n        roleAutho: null\n      },\n      data1: {},\n      defaultExpandedKeys: [\"0-0-0\", \"0-0-1\", \"0-0-2\"],\n      treeNodes // 后端传输的树节点数据\n    };\n  },\n\n  methods: {\n    chooseAuhto(record) {\n      axios.get(\"/sys/have1/chooseAutho\", {\n        params: {\n          roleNumber: record.roleNumber\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        this.temp = baseResult.code;\n        if (baseResult.code == 20000) {\n          this.checkedList = baseResult.data;\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    deleteAutho(record) {\n      axios.get(\"/sys/role/roleDelete\", {\n        params: {\n          token: localStorage.getItem(\"token\")\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        if (baseResult.code == 20000) {\n          this.deleteRow(record);\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    deleteRow(record) {\n      console.info(\"success\");\n      //提交给后台\n      axios.post(\"/sys/role/deleteRole\", {\n        roleNumber: record.roleNumber,\n        roleName: record.roleName\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          if (response.data.code == 2000) {\n            this.$message.success(\"成功删除！\", 5);\n          } else {\n            this.$message.error(\"无法删除！\", 5);\n          }\n          this.visible = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    showModal() {\n      this.visible = true;\n    },\n    showModaledit(record) {\n      this.visibleEdit = true;\n      this.formEdit.roleNumber = record.roleNumber;\n      this.formEdit.roleName = record.roleName;\n      this.formEdit.roleAutho = record.roleAutho;\n      this.chooseAuhto(record);\n    },\n    handleOk(e) {\n      this.visible = false;\n      this.checkAutho();\n    },\n    handleCancel(e) {\n      console.log(\"Clicked cancel button\");\n      this.visible = false;\n    },\n    handleOkEdit(e) {\n      this.visibleEdit = false;\n      this.editAutho();\n    },\n    handleCancelEdit(e) {\n      console.log(\"Clicked cancel button\");\n      this.visibleEdit = false;\n    },\n    onSelect(selectedKeys, info) {\n      console.log(\"selected\", selectedKeys, info);\n    },\n    onSearch(value) {\n      this.data = {\n        userName: value\n      };\n      console.info(\"search success\");\n      console.info(value);\n      //提交给后台\n      axios.get(\"/sys/users/allSearch\", {\n        params: {\n          userName: value\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        this.selectsearchClasses(value);\n      });\n    },\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = {\n        ...this.pagination\n      };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    },\n    editAutho() {\n      axios.get(\"/sys/role/roleUpdate\", {\n        params: {\n          token: localStorage.getItem(\"token\")\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        if (baseResult.code == 20000) {\n          this.edit();\n          this.editRoleAutho();\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    edit() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios.post(\"/sys/role/editRoleSelf\", {\n        roleName: this.formEdit.roleName,\n        roleNumber: this.formEdit.roleNumber\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          this.$message.success(\"成功修改！\", 5);\n          this.visibleEdit = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    editRoleAutho() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios.post(\"/sys/authority/editRoleAuhto\", {\n        roleNumber: this.formEdit.roleNumber,\n        roleAutho: this.checkedList\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          this.$message.success(\"成功修改！\", 5);\n          this.visibleEdit = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    onAdd() {\n      console.log(\"点击了添加\");\n    },\n    checkAutho() {\n      axios.get(\"/sys/role/roleAdd\", {\n        params: {\n          token: localStorage.getItem(\"token\")\n        }\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        var baseResult = response.data;\n        if (baseResult.code == 20000) {\n          this.check();\n        } else {\n          this.$message.error(\"没有权限！\", 5);\n        }\n      });\n    },\n    check() {\n      console.info(\"success\");\n      //提交给后台\n      axios.post(\"/sys/users/addUsers\", {\n        RoleName: this.form.userName,\n        userId: this.form.userId,\n        companyNumber: this.form.companyNumber,\n        departmentNumber: this.form.departmentNumber,\n        userRole: this.checkedList_new\n      }).then(response => {\n        // 处理成功响应\n        // console.log(\"成功发送表单数据至后端\", response);\n        if (response.status === 200) {\n          this.$message.success(\"成功添加！\", 10);\n          this.visible = false;\n          this.selectAllClasses(); //刷新\n        }\n      });\n    },\n\n    // 添加下面这个方法来提交表单数据给后端\n    submitForm() {\n      // 从这里发送 POST 请求，将 this.form 中的数据发送给后端\n      axios.post(\"/addUsers\", this.form).then(response => {\n        // 处理成功响应\n        console.log(\"成功发送表单数据至后端\", response);\n      }).catch(error => {\n        // 处理错误\n        console.error(\"发送表单数据至后端出错\", error);\n      });\n    },\n    onChange,\n    // getPositionList() {\n    //   // userApi.getUserList 开始调用后端，并传递参数searchModel\n    //   // then表示后端查询后返回的数据\n    //   positionApi.getPositionList().then((response) => {\n    //     this.positionList = response.data.rows;\n    //     this.total = response.data.total;\n    //   });\n    // },\n    async fetchData() {\n      try {\n        const response = axios.get(\"http://localhost:8090/sys/users/all\"); // 使用正确的URL来获取后端数据\n        const responseData = response.data; // 从响应中提取数据\n        if (responseData.code === 20000) {\n          this.positionList = responseData.data; // 将后端返回的数据赋值给前端的data变量\n        } else {\n          console.error(responseData.message); // 如果出现错误，输出错误信息\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    selectAllClasses() {\n      var url = \"http://localhost:8090/sys/role/allRole\";\n      axios.get(url).then(res => {\n        // 获得查询结果 BaseResult\n        var baseResult = res.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.positionList = baseResult.data;\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    showAllRole() {\n      var url = \"http://localhost:8090/sys/authority/allAutho\";\n      axios.get(url).then(res => {\n        // 获得查询结果 BaseResult\n        var baseResult = res.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.plainOptions = baseResult.data;\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    selectsearchClasses(userName) {\n      // ajax 查询\n      console.log(\"search\");\n      var url = \"http://localhost:8090/sys/users/allSearch?userName=\" + userName;\n      axios.get(url).then(response => {\n        // 获得查询结果 BaseResult\n        var baseResult = response.data;\n        // 判断\n        if (baseResult.code == 20000) {\n          // 成功 -- 将结果存放到数据区域\n          this.positionList = baseResult.data;\n          this.$message.success(\"成功查询！\", 5);\n        } else {\n          // 失败\n          alert(baseResult.message);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  },\n  created() {\n    // this.fetchData();\n    this.selectAllClasses();\n    this.showAllRole();\n  }\n};","map":{"version":3,"names":["formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","columns","title","dataIndex","key","width","sorter","a","b","positionName","localeCompare","sortDirections","fixed","scopedSlots","customRender","data","treeNodes","iconType","titleColor","children","i","push","name","age","address","onChange","pagination","filters","console","log","axios","showLine","showIcon","positionList","plainOptions","checkedList","temp","ModalText","visible","visibleEdit","confirmLoading","checkNick","checkedList_new","form","userName","userId","companyNumber","departmentNumber","formEdit","roleName","roleNumber","roleAutho","data1","defaultExpandedKeys","methods","chooseAuhto","record","get","params","then","response","baseResult","code","$message","error","deleteAutho","token","localStorage","getItem","deleteRow","info","post","status","success","selectAllClasses","showModal","showModaledit","handleOk","e","checkAutho","handleCancel","handleOkEdit","editAutho","handleCancelEdit","onSelect","selectedKeys","onSearch","value","selectsearchClasses","handleTableChange","pager","current","fetch","results","pageSize","page","sortField","field","sortOrder","order","edit","editRoleAutho","onAdd","check","RoleName","userRole","submitForm","catch","fetchData","responseData","message","url","res","alert","err","showAllRole","created"],"sources":["src/views/home/form/NewView.vue"],"sourcesContent":["<template>\n  <div>\n    <a-row>\n      <a-col :span=\"6\">\n        <a-layout-content\n          :style=\"{\n            background: '#fff',\n            padding: '24px',\n            height: '500px',\n            margin: '20px 5px',\n            overflow: 'initial',\n            top: '64px',\n          }\"\n        >\n          <!-- <h1>{{ checkedList }}</h1> -->\n          <div\n            style=\"\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              text-align: center;\n            \"\n          >\n            <div>\n              <div style=\"margin-bottom: 16px\">\n                showLine: <a-switch v-model=\"showLine\" />\n                <br />\n                <br />\n                showIcon: <a-switch v-model=\"showIcon\" />\n              </div>\n              <a-tree\n                :show-line=\"showLine\"\n                :show-icon=\"showIcon\"\n                :default-expanded-keys=\"defaultExpandedKeys\"\n                @select=\"onSelect\"\n              >\n                <a-icon slot=\"icon\" type=\"carry-out\" />\n                <a-tree-node\n                  :key=\"treeNode.id\"\n                  v-for=\"treeNode in treeNodes\"\n                  :title=\"treeNode.title\"\n                >\n                  <a-icon slot=\"icon\" type=\"carry-out\" />\n                  <span slot=\"title\" style=\"color: #1890ff\">{{\n                    treeNode.title\n                  }}</span>\n                  <a-tree-node\n                    :key=\"child.key\"\n                    v-for=\"child in treeNode.children\"\n                    :title=\"child.title\"\n                  >\n                    <a-icon slot=\"icon\" type=\"carry-out\" />\n                    <span slot=\"title\" style=\"color: #1890ff\">{{\n                      child.title\n                    }}</span>\n                    <!-- 可以继续嵌套更多的 a-tree-node 用于处理更深层级的树节点 -->\n                    <a-tree-node\n                      :key=\"child_.key\"\n                      v-for=\"child_ in child.children\"\n                      :title=\"child_.title\"\n                    >\n                      <a-icon slot=\"icon\" type=\"carry-out\" />\n                      <span slot=\"title\" style=\"color: #1890ff\">{{\n                        child_.title\n                      }}</span>\n                      <!-- 可以继续嵌套更多的 a-tree-node 用于处理更深层级的树节点 -->\n                    </a-tree-node>\n                  </a-tree-node>\n                </a-tree-node>\n              </a-tree>\n            </div>\n          </div>\n        </a-layout-content>\n      </a-col>\n      <a-col :span=\"18\">\n        <a-layout-content\n          :style=\"{\n            background: '#fff',\n            padding: '24px',\n            height: '500px',\n            overflow: 'initial',\n            margin: '20px 5px',\n            top: '64px',\n          }\"\n        >\n          <span>\n            <a-input-search style=\"width: 200px\" @search=\"onSearch\" />\n            <span style=\"margin-left: 8px\">\n              <a-button type=\"primary\" @click=\"showModal\">添加</a-button>\n              <a-modal\n                title=\"添加角色\"\n                :visible=\"visible\"\n                :confirm-loading=\"confirmLoading\"\n                @ok=\"handleOk\"\n                @cancel=\"handleCancel\"\n              >\n                <a-form>\n                  <a-form-item\n                    :label-col=\"formItemLayout.labelCol\"\n                    :wrapper-col=\"formItemLayout.wrapperCol\"\n                    label=\"角色名称\"\n                  >\n                    <a-input\n                      v-decorator=\"[\n                        'userName',\n                        {\n                          rules: [\n                            {\n                              required: true,\n                              message: '请输入',\n                            },\n                          ],\n                        },\n                      ]\"\n                      placeholder=\"请输入\"\n                      v-model=\"form.userName\"\n                    />\n                  </a-form-item>\n                  <a-form-item :label-col=\"4\" :wrapper-col=\"16\" label=\"权限\">\n                    <a-checkbox-group\n                      v-model=\"checkedList_new\"\n                      :options=\"plainOptions\"\n                    />\n                  </a-form-item>\n                  <a-form-item\n                    :label-col=\"formTailLayout.labelCol\"\n                    :wrapper-col=\"formTailLayout.wrapperCol\"\n                  >\n                  </a-form-item>\n                  <a-form-item\n                    :label-col=\"formTailLayout.labelCol\"\n                    :wrapper-col=\"formTailLayout.wrapperCol\"\n                  >\n                    <!-- <a-button type=\"primary\" @click=\"check\">提交</a-button> -->\n                  </a-form-item>\n                </a-form>\n              </a-modal>\n            </span>\n            <!-- <router-link to=\"/addUser\">\n              <a-button type=\"primary\" style=\"margin-left: 10%\" @click=\"onAdd\">\n                添加\n              </a-button>\n            </router-link> -->\n          </span>\n          <br />\n          <br />\n          <a-table\n            :columns=\"columns\"\n            :data-source=\"positionList\"\n            :scroll=\"{ x: 500, y: 300 }\"\n            :v-for=\"(position, index) in positionList\"\n            @change=\"onChange\"\n          >\n            <a slot=\"action\">编辑</a>\n            <a slot=\"action\" slot-scope=\"text, record\">\n              <a @click=\"deleteAutho(record)\">删除</a>\n              <a @click=\"showModaledit(record)\" style=\"margin-left: 8px\"\n                >编辑</a\n              >\n            </a>\n          </a-table>\n          <a-modal\n            title=\"编辑角色\"\n            :visible=\"visibleEdit\"\n            :confirm-loading=\"confirmLoading\"\n            @ok=\"handleOkEdit\"\n            @cancel=\"handleCancelEdit\"\n          >\n            <a-form-item>\n              <a-form-item\n                :label-col=\"formItemLayout.labelCol\"\n                :wrapper-col=\"formItemLayout.wrapperCol\"\n                label=\"角色名称\"\n              >\n                <a-input\n                  v-decorator=\"[\n                    'roleName',\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: '请输入',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                  v-model=\"formEdit.roleName\"\n                />\n              </a-form-item>\n              <a-form-item :label-col=\"4\" :wrapper-col=\"16\" label=\"权限\">\n                <a-checkbox-group\n                  v-model=\"checkedList\"\n                  :options=\"plainOptions\"\n                />\n              </a-form-item>\n              <a-form-item\n                :label-col=\"formTailLayout.labelCol\"\n                :wrapper-col=\"formTailLayout.wrapperCol\"\n              >\n              </a-form-item>\n              <a-form-item\n                :label-col=\"formTailLayout.labelCol\"\n                :wrapper-col=\"formTailLayout.wrapperCol\"\n              >\n                <!-- <a-button type=\"primary\" @click=\"check\">提交</a-button> -->\n              </a-form-item>\n            </a-form-item>\n          </a-modal>\n        </a-layout-content>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n<script>\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8 },\n};\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 },\n};\nconst columns = [\n  {\n    title: \"序号\",\n    dataIndex: \"roleNumber\",\n    key: \"roleNumber\",\n    width: 100,\n  },\n  {\n    title: \"角色名称\",\n    dataIndex: \"roleName\",\n    key: \"roleName\",\n    sorter: (a, b) => a.positionName.localeCompare(b.positionName),\n    sortDirections: [\"descend\", \"ascend\"],\n    width: 100,\n  },\n  {\n    title: \"权限\",\n    dataIndex: \"roleAutho\",\n    key: \"roleAutho\",\n    width: 100,\n  },\n  {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    scopedSlots: { customRender: \"action\" },\n  },\n];\nconst data = [];\nconst treeNodes = [\n  {\n    key: \"0-0\",\n    title: \"parent 1\",\n    iconType: \"carry-out\",\n    titleColor: \"#1890ff\",\n    children: [\n      {\n        key: \"0-0-0\",\n        title: \"parent 1-0\",\n        iconType: \"carry-out\",\n        titleColor: \"#1890ff\",\n        children: [\n          {\n            key: \"0-0-0-0\",\n            title: \"leaf 1-0-0\",\n            iconType: \"carry-out\",\n            titleColor: \"#1890ff\",\n            children: [], // 可以继续添加子节点\n          },\n          {\n            key: \"0-0-0-1\",\n            title: \"leaf 1-0-1\",\n            iconType: \"carry-out\",\n            titleColor: \"#1890ff\",\n            children: [], // 可以继续添加子节点\n          },\n          // 可以继续添加更多的子节点\n        ],\n      },\n      {\n        key: \"0-0-1\",\n        title: \"parent 1-1\",\n        iconType: \"carry-out\",\n        titleColor: \"#1890ff\",\n        children: [\n          // 可以添加更多的子节点和子子节点\n        ],\n      },\n      // 可以继续添加更多的父节点\n    ],\n  },\n];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`,\n  });\n}\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\n// 前后端对接的配置\n// import positionApi from \"@/api/positionManage\";\nimport axios from \"axios\";\n//import userApi from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\resource\\\\vue_01\\\\vue_bili_03\\\\vue_bili\\\\src\\\\api\\\\usersManage.js\";\nexport default {\n  data() {\n    return {\n      showLine: true,\n      showIcon: false,\n      data,\n      columns,\n      positionList: [],\n      plainOptions: [],\n      checkedList: [],\n      temp: 0,\n      ModalText: \"Content of the modal\",\n      visible: false,\n      visibleEdit: false,\n      confirmLoading: false,\n      checkNick: false,\n      formItemLayout,\n      formTailLayout,\n      checkedList_new: [],\n      form: {\n        userName: \"\",\n        userId: \"\",\n        companyNumber: null,\n        departmentNumber: null,\n      },\n      formEdit: {\n        roleName: \"\",\n        roleNumber: \"\",\n        roleAutho: null,\n      },\n      data1: {},\n      defaultExpandedKeys: [\"0-0-0\", \"0-0-1\", \"0-0-2\"],\n      treeNodes, // 后端传输的树节点数据\n    };\n  },\n  methods: {\n    chooseAuhto(record) {\n      axios\n        .get(\"/sys/have1/chooseAutho\", {\n          params: {\n            roleNumber: record.roleNumber,\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          this.temp = baseResult.code;\n          if (baseResult.code == 20000) {\n            this.checkedList = baseResult.data;\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    deleteAutho(record) {\n      axios\n        .get(\"/sys/role/roleDelete\", {\n          params: {\n            token: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          if (baseResult.code == 20000) {\n            this.deleteRow(record);\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    deleteRow(record) {\n      console.info(\"success\");\n      //提交给后台\n      axios\n        .post(\"/sys/role/deleteRole\", {\n          roleNumber: record.roleNumber,\n          roleName: record.roleName,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            if (response.data.code == 2000) {\n              this.$message.success(\"成功删除！\", 5);\n            } else {\n              this.$message.error(\"无法删除！\", 5);\n            }\n            this.visible = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    showModal() {\n      this.visible = true;\n    },\n    showModaledit(record) {\n      this.visibleEdit = true;\n      this.formEdit.roleNumber = record.roleNumber;\n      this.formEdit.roleName = record.roleName;\n      this.formEdit.roleAutho = record.roleAutho;\n      this.chooseAuhto(record);\n    },\n    handleOk(e) {\n      this.visible = false;\n      this.checkAutho();\n    },\n    handleCancel(e) {\n      console.log(\"Clicked cancel button\");\n      this.visible = false;\n    },\n    handleOkEdit(e) {\n      this.visibleEdit = false;\n      this.editAutho();\n    },\n    handleCancelEdit(e) {\n      console.log(\"Clicked cancel button\");\n      this.visibleEdit = false;\n    },\n    onSelect(selectedKeys, info) {\n      console.log(\"selected\", selectedKeys, info);\n    },\n    onSearch(value) {\n      this.data = {\n        userName: value,\n      };\n      console.info(\"search success\");\n      console.info(value);\n      //提交给后台\n      axios\n        .get(\"/sys/users/allSearch\", {\n          params: {\n            userName: value,\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          this.selectsearchClasses(value);\n        });\n    },\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = { ...this.pagination };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    },\n    editAutho() {\n      axios\n        .get(\"/sys/role/roleUpdate\", {\n          params: {\n            token: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          if (baseResult.code == 20000) {\n            this.edit();\n            this.editRoleAutho();\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    edit() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios\n        .post(\"/sys/role/editRoleSelf\", {\n          roleName: this.formEdit.roleName,\n          roleNumber: this.formEdit.roleNumber,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            this.$message.success(\"成功修改！\", 5);\n            this.visibleEdit = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    editRoleAutho() {\n      console.info(\"success edit\");\n      //提交给后台\n      axios\n        .post(\"/sys/authority/editRoleAuhto\", {\n          roleNumber: this.formEdit.roleNumber,\n          roleAutho: this.checkedList,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            this.$message.success(\"成功修改！\", 5);\n            this.visibleEdit = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    onAdd() {\n      console.log(\"点击了添加\");\n    },\n    checkAutho() {\n      axios\n        .get(\"/sys/role/roleAdd\", {\n          params: {\n            token: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          var baseResult = response.data;\n          if (baseResult.code == 20000) {\n            this.check();\n          } else {\n            this.$message.error(\"没有权限！\", 5);\n          }\n        });\n    },\n    check() {\n      console.info(\"success\");\n      //提交给后台\n      axios\n        .post(\"/sys/users/addUsers\", {\n          RoleName: this.form.userName,\n          userId: this.form.userId,\n          companyNumber: this.form.companyNumber,\n          departmentNumber: this.form.departmentNumber,\n          userRole: this.checkedList_new,\n        })\n        .then((response) => {\n          // 处理成功响应\n          // console.log(\"成功发送表单数据至后端\", response);\n          if (response.status === 200) {\n            this.$message.success(\"成功添加！\", 10);\n            this.visible = false;\n            this.selectAllClasses(); //刷新\n          }\n        });\n    },\n    // 添加下面这个方法来提交表单数据给后端\n    submitForm() {\n      // 从这里发送 POST 请求，将 this.form 中的数据发送给后端\n      axios\n        .post(\"/addUsers\", this.form)\n        .then((response) => {\n          // 处理成功响应\n          console.log(\"成功发送表单数据至后端\", response);\n        })\n        .catch((error) => {\n          // 处理错误\n          console.error(\"发送表单数据至后端出错\", error);\n        });\n    },\n    onChange,\n    // getPositionList() {\n    //   // userApi.getUserList 开始调用后端，并传递参数searchModel\n    //   // then表示后端查询后返回的数据\n    //   positionApi.getPositionList().then((response) => {\n    //     this.positionList = response.data.rows;\n    //     this.total = response.data.total;\n    //   });\n    // },\n    async fetchData() {\n      try {\n        const response = axios.get(\"http://localhost:8090/sys/users/all\"); // 使用正确的URL来获取后端数据\n        const responseData = response.data; // 从响应中提取数据\n        if (responseData.code === 20000) {\n          this.positionList = responseData.data; // 将后端返回的数据赋值给前端的data变量\n        } else {\n          console.error(responseData.message); // 如果出现错误，输出错误信息\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    selectAllClasses() {\n      var url = \"http://localhost:8090/sys/role/allRole\";\n      axios\n        .get(url)\n        .then((res) => {\n          // 获得查询结果 BaseResult\n          var baseResult = res.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.positionList = baseResult.data;\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    showAllRole() {\n      var url = \"http://localhost:8090/sys/authority/allAutho\";\n      axios\n        .get(url)\n        .then((res) => {\n          // 获得查询结果 BaseResult\n          var baseResult = res.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.plainOptions = baseResult.data;\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    selectsearchClasses(userName) {\n      // ajax 查询\n      console.log(\"search\");\n      var url =\n        \"http://localhost:8090/sys/users/allSearch?userName=\" + userName;\n      axios\n        .get(url)\n        .then((response) => {\n          // 获得查询结果 BaseResult\n          var baseResult = response.data;\n          // 判断\n          if (baseResult.code == 20000) {\n            // 成功 -- 将结果存放到数据区域\n            this.positionList = baseResult.data;\n            this.$message.success(\"成功查询！\", 5);\n          } else {\n            // 失败\n            alert(baseResult.message);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n  },\n  created() {\n    // this.fetchData();\n    this.selectAllClasses();\n    this.showAllRole();\n  },\n};\n</script>\n<style>\n.div_form {\n  width: 10% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.form {\n  width: 50% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.outer-container {\n  width: 50%; /* 控制外部容器的宽度 */\n  margin: 0 auto; /* 让外部容器水平居中对齐 */\n}\n\n.custom-label::before {\n  content: \"*\";\n  color: red; /* 设置星号颜色 */\n  margin-left: 4px; /* 设置星号与标签之间的距离 */\n}\n\n.div_top {\n  background-color: white;\n  width: 100%;\n  height: 100%;\n}\n.editable-cell {\n  position: relative;\n}\n\n.editable-cell-input-wrapper,\n.editable-cell-text-wrapper {\n  padding-right: 24px;\n}\n\n.editable-cell-text-wrapper {\n  padding: 5px 24px 5px 5px;\n}\n\n.editable-cell-icon,\n.editable-cell-icon-check {\n  position: absolute;\n  right: 0;\n  width: 20px;\n  cursor: pointer;\n}\n\n.editable-cell-icon {\n  line-height: 18px;\n  display: none;\n}\n\n.editable-cell-icon-check {\n  line-height: 28px;\n}\n\n.editable-cell:hover .editable-cell-icon {\n  display: inline-block;\n}\n\n.editable-cell-icon:hover,\n.editable-cell-icon-check:hover {\n  color: #108ee9;\n}\n\n.editable-add-btn {\n  margin-bottom: 8px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export default {\n  data() {\n    return {\n      username: \"Serati Ma\",\n      signature: \"海纳百川，有容乃大\",\n      tags: [\"Unremovable\", \"Tag 2\", \"Tag 3Tag 3Tag 3Tag 3Tag 3Tag 3Tag 3\"],\n      inputVisible: false,\n      inputValue: \"\",\n      current: \"passage\"\n    };\n  },\n  methods: {\n    handleClose(removedTag) {\n      const tags = this.tags.filter(tag => tag !== removedTag);\n      console.log(tags);\n      this.tags = tags;\n    },\n    showInput() {\n      this.inputVisible = true;\n      this.$nextTick(function () {\n        this.$refs.input.focus();\n      });\n    },\n    handleInputChange(e) {\n      this.inputValue = e.target.value;\n    },\n    handleInputConfirm() {\n      const inputValue = this.inputValue;\n      let tags = this.tags;\n      if (inputValue && tags.indexOf(inputValue) === -1) {\n        tags = [...tags, inputValue];\n      }\n      console.log(tags);\n      Object.assign(this, {\n        tags,\n        inputVisible: false,\n        inputValue: \"\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","username","signature","tags","inputVisible","inputValue","current","methods","handleClose","removedTag","filter","tag","console","log","showInput","$nextTick","$refs","input","focus","handleInputChange","e","target","value","handleInputConfirm","indexOf","Object","assign"],"sources":["src/views/home/personal/PersonalCenter.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"div_top\"></div>\n    <a-row>\n      <a-col :span=\"6\">\n        <a-layout-content\n          :style=\"{\n            background: '#fff',\n            padding: '24px',\n            minHeight: '280px',\n            margin: '20px 0px',\n            overflow: 'initial',\n            top: '64px',\n          }\"\n        >\n          <h1>左侧内容</h1>\n          <div\n            style=\"\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              text-align: center;\n            \"\n          >\n            <a-avatar :size=\"100\">\n              <template #icon><UserOutlined /></template>\n            </a-avatar>\n            <br />\n            <h1 style=\"font-size: 20px\">{{ username }}</h1>\n            <span style=\"font-size: 15px\">{{ signature }}</span>\n            <br />\n          </div>\n          <div>\n            <span\n              style=\"font-size: 15px; display: inline-block; text-align: left\"\n              ><a-icon type=\"idcard\" /> 交互专家</span\n            >\n            <span style=\"font-size: 15px; display: inline-block\"\n              ><a-icon type=\"apartment\" /> 蚂蚁金服 - 某某某事业群 - UED</span\n            >\n            <span style=\"font-size: 15px; display: inline-block\"\n              ><a-icon type=\"home\" /> 浙江省杭州市</span\n            >\n          </div>\n          <br />\n          <a-divider />\n          <br />\n          <div>\n            <h1 style=\"font-size: 15px; font-weight: bold\">标签</h1>\n            <div>\n              <template v-for=\"(tag, index) in tags\">\n                <a-tooltip v-if=\"tag.length > 20\" :key=\"tag\" :title=\"tag\">\n                  <a-tag\n                    :key=\"tag\"\n                    :closable=\"index !== 0\"\n                    @close=\"() => handleClose(tag)\"\n                  >\n                    {{ `${tag.slice(0, 20)}...` }}\n                  </a-tag>\n                </a-tooltip>\n                <a-tag\n                  v-else\n                  :key=\"tag\"\n                  :closable=\"index !== 0\"\n                  @close=\"() => handleClose(tag)\"\n                >\n                  {{ tag }}\n                </a-tag>\n              </template>\n              <a-input\n                v-if=\"inputVisible\"\n                ref=\"input\"\n                type=\"text\"\n                size=\"small\"\n                :style=\"{ width: '78px' }\"\n                :value=\"inputValue\"\n                @change=\"handleInputChange\"\n                @blur=\"handleInputConfirm\"\n                @keyup.enter=\"handleInputConfirm\"\n              />\n              <a-tag\n                v-else\n                style=\"background: #fff; borderstyle: dashed\"\n                @click=\"showInput\"\n              >\n                <a-icon type=\"plus\" /> New Tag\n              </a-tag>\n            </div>\n          </div>\n          <br />\n          <a-divider />\n          <br />\n          <div>\n            <h1 style=\"font-size: 15px; font-weight: bold\">团队</h1>\n          </div>\n        </a-layout-content>\n      </a-col>\n      <a-col :span=\"18\">\n        <a-layout-content\n          :style=\"{\n            background: '#fff',\n            padding: '24px',\n            minHeight: '280px',\n            overflow: 'initial',\n            margin: '20px 20px',\n            top: '64px',\n          }\"\n        >\n          <h1>右侧内容</h1>\n          <div>\n            <a-menu v-model=\"current\" mode=\"horizontal\">\n              <a-menu-item key=\"passage\">文章</a-menu-item>\n              <a-menu-item key=\"application\" >应用</a-menu-item>\n              <a-menu-item key=\"project\">项目</a-menu-item>\n            </a-menu>\n          </div>\n          <div>\n            <router-view />\n          </div>\n        </a-layout-content>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: \"Serati Ma\",\n      signature: \"海纳百川，有容乃大\",\n      tags: [\"Unremovable\", \"Tag 2\", \"Tag 3Tag 3Tag 3Tag 3Tag 3Tag 3Tag 3\"],\n      inputVisible: false,\n      inputValue: \"\",\n      current: \"passage\",\n    };\n  },\n  methods: {\n    handleClose(removedTag) {\n      const tags = this.tags.filter((tag) => tag !== removedTag);\n      console.log(tags);\n      this.tags = tags;\n    },\n\n    showInput() {\n      this.inputVisible = true;\n      this.$nextTick(function () {\n        this.$refs.input.focus();\n      });\n    },\n\n    handleInputChange(e) {\n      this.inputValue = e.target.value;\n    },\n\n    handleInputConfirm() {\n      const inputValue = this.inputValue;\n      let tags = this.tags;\n      if (inputValue && tags.indexOf(inputValue) === -1) {\n        tags = [...tags, inputValue];\n      }\n      console.log(tags);\n      Object.assign(this, {\n        tags,\n        inputVisible: false,\n        inputValue: \"\",\n      });\n    },\n  },\n};\n</script>\n\n<style>\n/* 添加你的样式 */\n</style>\n"],"mappings":"AA8HA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,IAAA;MACAC,YAAA;MACAC,UAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAC,UAAA;MACA,MAAAN,IAAA,QAAAA,IAAA,CAAAO,MAAA,CAAAC,GAAA,IAAAA,GAAA,KAAAF,UAAA;MACAG,OAAA,CAAAC,GAAA,CAAAV,IAAA;MACA,KAAAA,IAAA,GAAAA,IAAA;IACA;IAEAW,UAAA;MACA,KAAAV,YAAA;MACA,KAAAW,SAAA;QACA,KAAAC,KAAA,CAAAC,KAAA,CAAAC,KAAA;MACA;IACA;IAEAC,kBAAAC,CAAA;MACA,KAAAf,UAAA,GAAAe,CAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;IAEAC,mBAAA;MACA,MAAAlB,UAAA,QAAAA,UAAA;MACA,IAAAF,IAAA,QAAAA,IAAA;MACA,IAAAE,UAAA,IAAAF,IAAA,CAAAqB,OAAA,CAAAnB,UAAA;QACAF,IAAA,OAAAA,IAAA,EAAAE,UAAA;MACA;MACAO,OAAA,CAAAC,GAAA,CAAAV,IAAA;MACAsB,MAAA,CAAAC,MAAA;QACAvB,IAAA;QACAC,YAAA;QACAC,UAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
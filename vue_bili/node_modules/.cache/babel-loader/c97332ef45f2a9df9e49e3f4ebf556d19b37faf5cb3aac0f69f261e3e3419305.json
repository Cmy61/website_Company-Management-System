{"ast":null,"code":"const columns = [{\n  title: \"规则名称\",\n  dataIndex: \"name\"\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n}, {\n  title: \"描述\",\n  dataIndex: \"description\"\n}, {\n  title: \"服务调用次数\",\n  dataIndex: \"times\",\n  sorter: (a, b) => a.times - b.times,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"状态\",\n  dataIndex: \"state\"\n}, {\n  title: \"上次调度时间\",\n  dataIndex: \"date\",\n  sorter: (a, b) => a.date - b.date,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Action\",\n  key: \"action\",\n  scopedSlots: {\n    customRender: \"action\"\n  }\n}];\nconst data = [{\n  key: \"1\",\n  name: \"TradeCode 99\",\n  description: \"描述\",\n  times: 700,\n  state: \"异常\",\n  date: \"\"\n}, {\n  key: \"2\",\n  name: \"TradeCode 98\",\n  description: \"描述\",\n  times: 100,\n  state: \"异常\",\n  date: \"\"\n}, {\n  key: \"3\",\n  name: \"TradeCode 97\",\n  description: \"描述\",\n  times: 580,\n  state: \"异常\",\n  date: \"\"\n}];\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\nexport default {\n  data() {\n    return {\n      data,\n      pagination: {},\n      loading: false,\n      columns,\n      expand: false,\n      form: this.$form.createForm(this, {\n        name: \"advanced_search\"\n      }),\n      // columns: [\n      //   { label: \"规则名称\", value: \"\" },\n      //   { label: \"描述\", value: \"\" },\n      //   { label: \"服务调用次数\", value: \"\" },\n      //   { label: \"状态\", value: \"\" },\n      //   { label: \"上次调用时间\", value: \"\" },\n      //   // 添加其他列的名称和初始值\n      // ],\n      column: [\"规则名称\", \"描述\", \"服务调用次数\", \"状态\", \"上次调用时间\"],\n      value: [\"\", \"\", \"\", \"\", \"\"]\n    };\n  },\n  computed: {\n    count() {\n      return this.expand ? 6 : 3;\n    }\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleSearch(e) {\n      e.preventDefault();\n      this.form.validateFields((error, values) => {\n        console.log(\"error\", error);\n        console.log(\"Received values of form: \", values);\n      });\n    },\n    handleReset() {\n      this.form.resetFields();\n    },\n    toggle() {\n      this.expand = !this.expand;\n    },\n    onChange\n  }\n};","map":{"version":3,"names":["columns","title","dataIndex","sorter","a","b","times","sortDirections","date","key","scopedSlots","customRender","data","name","description","state","onChange","pagination","filters","console","log","loading","expand","form","$form","createForm","column","value","computed","count","updated","mounted","fetch","methods","handleSearch","e","preventDefault","validateFields","error","values","handleReset","resetFields","toggle"],"sources":["src/views/home/list/QueryView.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"div_top\"></div>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '0px',\n        margin: '0',\n        height: '100px',\n        overflow: 'initial',\n        width: '150%',\n        top: '64px',\n        marginLeft: '-7%',\n        marginRight: '0',\n      }\"\n    >\n      <h1>查询表格</h1>\n    </a-layout-content>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '24px',\n        margin: '24px auto 0',\n        minHeight: '100px',\n        overflow: 'initial',\n        width: '100%',\n        top: '64px',\n      }\"\n    >\n      <div id=\"components-form-demo-advanced-search\">\n        <a-form\n          class=\"ant-advanced-search-form\"\n          :form=\"form\"\n          @submit=\"handleSearch\"\n        >\n          <a-row :gutter=\"18\">\n            <a-col\n              v-for=\"i in 5\"\n              :key=\"i\"\n              :span=\"8\"\n              :style=\"{ display: i <= count ? 'block' : 'none' }\"\n            >\n              <a-form-item>\n                <label>{{ column[i - 1] }}: </label>\n                <a-input\n                  v-model=\"value[i - 1]\"\n                  style=\"width: 50%; text-align: left\"\n                  v-decorator=\"[\n                    `field-${i}`,\n                    {\n                      rules: [\n                        {\n                          required: true,\n                          message: 'Input something!',\n                        },\n                      ],\n                    },\n                  ]\"\n                  placeholder=\"请输入\"\n                />\n              </a-form-item>\n            </a-col>\n          </a-row>\n          <a-row>\n            <a-col :span=\"24\" :style=\"{ textAlign: 'right' }\">\n              <a-button type=\"primary\" html-type=\"submit\">查询</a-button>\n              <a-button :style=\"{ marginLeft: '8px' }\" @click=\"handleReset\"\n                >清空</a-button\n              >\n              <a\n                :style=\"{ marginLeft: '8px', fontSize: '12px' }\"\n                @click=\"toggle\"\n              >\n                收起 <a-icon :type=\"expand ? 'up' : 'down'\" />\n              </a>\n            </a-col>\n          </a-row>\n        </a-form>\n      </div>\n    </a-layout-content>\n    <a-layout-content\n      :style=\"{\n        background: '#fff',\n        padding: '24px',\n        margin: '24px auto 0',\n        minHeight: '280px',\n        overflow: 'initial',\n        width: '100%',\n        top: '64px',\n      }\"\n    >\n      <div class=\"title-row\">\n        <h3>查询表格</h3>\n        <a-button type=\"primary\" icon=\"plus\">Primary</a-button>\n      </div>\n      <br />\n      <a-table :columns=\"columns\" :data-source=\"data\" @change=\"onChange\">\n        <a slot=\"name\" slot-scope=\"text\">{{ text }}</a>\n        <span slot=\"action\" class=\"action-item\">\n          <a>配置</a>\n        </span>\n        <span slot=\"action\" class=\"action-divider\"></span>\n        <span slot=\"action\" class=\"action-item\">\n          <a>订阅警报</a>\n        </span>\n      </a-table>\n    </a-layout-content>\n  </div>\n</template>\n\n<script>\nconst columns = [\n  {\n    title: \"规则名称\",\n    dataIndex: \"name\",\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n  },\n  {\n    title: \"描述\",\n    dataIndex: \"description\",\n  },\n  {\n    title: \"服务调用次数\",\n    dataIndex: \"times\",\n    sorter: (a, b) => a.times - b.times,\n    sortDirections: [\"descend\", \"ascend\"],\n  },\n  {\n    title: \"状态\",\n    dataIndex: \"state\",\n  },\n  {\n    title: \"上次调度时间\",\n    dataIndex: \"date\",\n    sorter: (a, b) => a.date - b.date,\n    sortDirections: [\"descend\", \"ascend\"],\n  },\n  {\n    title: \"Action\",\n    key: \"action\",\n    scopedSlots: { customRender: \"action\" },\n  },\n];\n\nconst data = [\n  {\n    key: \"1\",\n    name: \"TradeCode 99\",\n    description: \"描述\",\n    times: 700,\n    state: \"异常\",\n    date: \"\",\n  },\n  {\n    key: \"2\",\n    name: \"TradeCode 98\",\n    description: \"描述\",\n    times: 100,\n    state: \"异常\",\n    date: \"\",\n  },\n  {\n    key: \"3\",\n    name: \"TradeCode 97\",\n    description: \"描述\",\n    times: 580,\n    state: \"异常\",\n    date: \"\",\n  },\n];\n\nfunction onChange(pagination, filters, sorter) {\n  console.log(\"params\", pagination, filters, sorter);\n}\nexport default {\n  data() {\n    return {\n      data,\n      pagination: {},\n      loading: false,\n      columns,\n      expand: false,\n      form: this.$form.createForm(this, { name: \"advanced_search\" }),\n      // columns: [\n      //   { label: \"规则名称\", value: \"\" },\n      //   { label: \"描述\", value: \"\" },\n      //   { label: \"服务调用次数\", value: \"\" },\n      //   { label: \"状态\", value: \"\" },\n      //   { label: \"上次调用时间\", value: \"\" },\n      //   // 添加其他列的名称和初始值\n      // ],\n      column: [\"规则名称\", \"描述\", \"服务调用次数\", \"状态\", \"上次调用时间\"],\n      value: [\"\", \"\", \"\", \"\", \"\"],\n    };\n  },\n  computed: {\n    count() {\n      return this.expand ? 6 : 3;\n    },\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleSearch(e) {\n      e.preventDefault();\n      this.form.validateFields((error, values) => {\n        console.log(\"error\", error);\n        console.log(\"Received values of form: \", values);\n      });\n    },\n\n    handleReset() {\n      this.form.resetFields();\n    },\n\n    toggle() {\n      this.expand = !this.expand;\n    },\n    onChange,\n  },\n};\n</script>\n<style>\n.div_form {\n  width: 10% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.form {\n  width: 50% !important; /* 控制表单容器的宽度为 50% */\n  margin: 0 auto; /* 让表单容器水平居中对齐 */\n}\n\n.outer-container {\n  width: 50%; /* 控制外部容器的宽度 */\n  margin: 0 auto; /* 让外部容器水平居中对齐 */\n}\n\n.div_top {\n  background-color: white;\n  width: 100%;\n  height: 100%;\n}\n\n.ant-advanced-search-form .ant-form-item {\n  display: flex;\n}\n\n.ant-advanced-search-form .ant-form-item-control-wrapper {\n  flex: 1;\n}\n\n#components-form-demo-advanced-search .ant-form {\n  max-width: none;\n}\n\n.action-item {\n  padding-right: 8px; /* 为了增加一些间距 */\n}\n\nh3 {\n  margin-right: 10px; /* 调整标题与按钮之间的间距 */\n}\n\n.title-row {\n  display: flex;\n  justify-content: space-between; /* 将内容分散排列，标题在左，按钮在右 */\n  align-items: center; /* 垂直居中对齐 */\n}\n</style>\n"],"mappings":"AA+GA,MAAAA,OAAA,IACA;EACAC,KAAA;EACAC,SAAA;EACA;EACA;AACA,GACA;EACAD,KAAA;EACAC,SAAA;AACA,GACA;EACAD,KAAA;EACAC,SAAA;EACAC,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,KAAA,GAAAD,CAAA,CAAAC,KAAA;EACAC,cAAA;AACA,GACA;EACAN,KAAA;EACAC,SAAA;AACA,GACA;EACAD,KAAA;EACAC,SAAA;EACAC,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAI,IAAA,GAAAH,CAAA,CAAAG,IAAA;EACAD,cAAA;AACA,GACA;EACAN,KAAA;EACAQ,GAAA;EACAC,WAAA;IAAAC,YAAA;EAAA;AACA,EACA;AAEA,MAAAC,IAAA,IACA;EACAH,GAAA;EACAI,IAAA;EACAC,WAAA;EACAR,KAAA;EACAS,KAAA;EACAP,IAAA;AACA,GACA;EACAC,GAAA;EACAI,IAAA;EACAC,WAAA;EACAR,KAAA;EACAS,KAAA;EACAP,IAAA;AACA,GACA;EACAC,GAAA;EACAI,IAAA;EACAC,WAAA;EACAR,KAAA;EACAS,KAAA;EACAP,IAAA;AACA,EACA;AAEA,SAAAQ,SAAAC,UAAA,EAAAC,OAAA,EAAAf,MAAA;EACAgB,OAAA,CAAAC,GAAA,WAAAH,UAAA,EAAAC,OAAA,EAAAf,MAAA;AACA;AACA;EACAS,KAAA;IACA;MACAA,IAAA;MACAK,UAAA;MACAI,OAAA;MACArB,OAAA;MACAsB,MAAA;MACAC,IAAA,OAAAC,KAAA,CAAAC,UAAA;QAAAZ,IAAA;MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAa,MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,MAAA;MACA,YAAAP,MAAA;IACA;EACA;EACAQ,QAAA;IACAX,OAAA,CAAAC,GAAA;EACA;EACAW,QAAA;IACA,KAAAC,KAAA;EACA;EACAC,OAAA;IACAC,aAAAC,CAAA;MACAA,CAAA,CAAAC,cAAA;MACA,KAAAb,IAAA,CAAAc,cAAA,EAAAC,KAAA,EAAAC,MAAA;QACApB,OAAA,CAAAC,GAAA,UAAAkB,KAAA;QACAnB,OAAA,CAAAC,GAAA,8BAAAmB,MAAA;MACA;IACA;IAEAC,YAAA;MACA,KAAAjB,IAAA,CAAAkB,WAAA;IACA;IAEAC,OAAA;MACA,KAAApB,MAAA,SAAAA,MAAA;IACA;IACAN;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}